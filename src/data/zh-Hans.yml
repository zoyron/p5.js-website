Skip-To-Content: 跳到内容
Language-Settings: 语言设定
Sidebar-Title: 网站导航
Home: 主页
Editor: 编辑器
Download: 下载
Donate: 捐赠
Start: 入门
Reference: 参考文献
Libraries: 程式库
Learn: 学习
Teach: 教学
Examples: 范例
Books: 书籍
Community: 社群
Contribute: 贡献
Forum: 论坛
Showcase: 案例展示
footerxh1: 归功于
footer1: p5.js 目前由
footer3: 领导，原创者为
footer4: 。p5.js 是在
footer5: 和
footer6: 的支持下由其合作社群所开发。形象及平面设计
footer7: 。
footer8: 版权信息
footer9: 。
tagline1: Processing 的趣味结合 JavaScript 的俏皮
tagline2: Processing 的简易性结合 JavaScript 的灵活性
tagline3: Processing 的直觉结合 JavaScript 的力量
tagline4: Processing 的创意结合 JavaScript 的活跃性
tagline5: Processing 的社群结合 JavaScript 的社群
tagline6: Processing 的力量结合 JavaScript 的范围
tagline7: P5.js 社区与 Black Lives Matter 站在一起，表达团结和支持。
home:
  start-creating: 使用 p5 编辑器开始创作！
  p1xh1: 你好!
  p1x1: >-
    p5.js 是个 JavaScript 创意编程程式库，其专注在让编程更易于使用及更加广泛的包容艺术家、设计师、教育家、初学者以及任何其他人！p5.js
    是个免费及开源的软件因为我们相信所有人都应该能自由使用软件及用于学习软件的工具。
  p1x2: >-
    p5.js 使用绘图的比喻并有一副完整的绘画功能。除此之外，您也不单限于您的绘图画布。您可以将您整个浏览器页面当作您的绘图，这包括了 HTML5
    物件如文字、输入框、视屏、摄像头及音频。
  p2xh2: 社群
  p2x1: >-
    我们声援及支持所有人，不论他们来自不同性别认同、性取向、种族、国籍、语言、神经型、大小、能力、阶级、宗教、文化、次文化、政治观点、年龄、技能等级、职业或背景。我们了解并不是所有人都有多余的时间、金钱或能力以活跃的参与社群活动但我们同时认可及鼓励各种参与方式。我们致力于促进障碍消除及培养能力。我们都是学习者。
  p2x2: 'p5.js 是 '
  p2x3: ' 于今日的网页的诠释。我们的活动及运作由 '
  p2x4: ' 所支持。'
  p2x5: 了解更多关于
  p2x6: 我们的社群
  p2x7: 。
  p3xh2: 入门
  p3xp1: '使用 '
  p3xp2: ' 制作您的第一个绘图。以了解更多关于如何使用 p5.js 绘图及其各种功能请参考'
  p3xp3: 入门页面
  p3xp4: 及
  p3xp5: 参考文献
  p3xp6: 。
  p4xh2: 参与
  p4xp1: 我们有各种方式让您贡献给 p5.js：
  p4xp2: 参与方式包括
  p4xp3: 分享您制作的项目！
  p4xp4: 使用 p5.js 教学。
  p4xp5: 举办个聚会。
  p4xp6: 贡献代码。
  sketch_credits: Sketch Credits
  sketch_info: Hunminjeongeum2020 created by Seonghyeon Kim
copyright:
  copyright-title: 版权信息
  copyright1: p5.js 编程库是个免费开源的软件；您可以在 Free Software Foundation 的
  copyright2: ' 2.1版条款下分布及/或修改该软件。'
  copyright3: 参考文献是在
  copyright4: 许可下允许任何人重用该文献只要该用处为非商业化及原作者有被归功。
get started:
  get-started-title: 入门
  get-started1: 这个页面将会引导你创建一个 p5.js 项目然后制作你的第一个绘图。
  get-started2: '最快捷的上手方法便是使用 '
  get-started3: p5.js 编辑器
  get-started4: '，你可以打开这个网页编辑器然后滚动到 '
  get-started5: 你的第一个绘图
  get-started6: 。如果你想创建桌面版的 p5.js 项目，则可以滚动到
  get-started7: 下载说明
  get-started-button: 复制
  settingUp-title: 在你自己电脑的编辑器上创建 p5.js 项目
  download-title: 本地下载一份 p5.js 库
  hosted-title: 使用线上版本的 p5.js 库
  download1: 最简易的起点是使用
  download2: p5.js 完整版
  download3: 下载所提供的空白范例。
  download8: '下载之后，你需要启动一个本地服务器。方法请参考 '
  download9: 这里
  download10: 。在下载的文件夹目录下运行你的本地服务器，然后打开浏览器访问
  download11: 'http://localhost:{your-port-num}/empty-example'
  download4: >-
    查看 index.html 您可以发现其中有个 p5.js 的链接。如果您想要使用极简化的档案（以加速网页加载的速度），将链接档案名改为
    p5.min.js
  download5: >-
    另外，您也可以选择链接去网络上的 p5.js 文档。所有 p5.js 版本都被上载到多个 CDN (Content Delivery Network)
    上，您可在此链接参考所有 p5.js 版本：
  download6: 。接下来您只需要将链接改为：
  download7: 一个极简但完整的 HTML 档案如下：
  environment-title: 编程环境
  environment1: 您可以使用任何
  environmentlink: >-
    https://zh.wikipedia.org/wiki/%E6%BA%90%E4%BB%A3%E7%A0%81%E7%BC%96%E8%BE%91%E5%99%A8
  environment2: 代码编程器
  environment3: 。以下为设置
  environment4: 的步骤。其他不错的代码编程器包括
  environment5: 和
  environment6: '如果您使用荧幕阅读器但不使用 p5 Editor，您可考虑使用 '
  environment7: ' 或 '
  environment8: >-
    开启 Sublime。选择 File 目录项目然后选择 Open... 接着在对话框中选择含有您的 .html 及 .js
    档案的文件夹。在窗口左边的文件栏您应该能看到文件夹的名字在最上方而往下都是该文件夹里面所含的档案。
  environment9: 点击 sketch.js 档案即会在右边开启该档案，您也能在这时更改该档案。
  environment10: p5 的起始代码已经在 Sublime 编辑器中打开。
  environment11: 在文件浏览器内双击 index.html 以在您的网页浏览器内开启该档案，或您也可以直接在网页浏览器内的网址栏输入：
  environment12: 'file:///html文件在硬盘上的位置/'
  environment14: ' (or '
  environment15: 'http://localhost:{your-port-num}/empty-example'
  environment16: ' if you are using a local server)'
  environment13: 以查看您的绘图。
  your-first-sketch-title: 你的第一个绘图
  your-first-sketch-intro1: '在 '
  your-first-sketch-intro2: 'https://editor.p5js.org/'
  your-first-sketch-intro3: p5.js 网页编辑器里
  your-first-sketch-intro4: ' 你可以看到如下代码：'
  your-first-sketch1: '在 '
  your-first-sketch2: ' 之后添加这一行代码： '
  your-first-sketch3: '更新后的代码如下： '
  your-first-sketch4: 你刚刚添加的这一行代码画了一个椭圆，其中心距左边界50像素，距上边界50像素，宽和高各为80像素。
  your-first-sketch5: 在编辑器中按下“播放”按钮，以查看你的代码运行效果！
  your-first-sketch6: >-
    如果你正在使用屏幕阅读器，你必须在 p5 在线编辑器中打开可访问性输出，如果在编辑器外部编写代码， 则必须在 HTML
    中添加可访问性库。如果想要了解更多信息，请访问：
  your-first-sketch7: “使用屏幕阅读器使用p5”教程：
  your-first-sketch8: 如果你输入的都正确，那么屏幕上会显示：
  your-first-sketch9: 画布上有一个宽和高都为50像素，位于80 x和80 y位置的圆形
  your-first-sketch10: >-
    如果没有出现任何内容，可能是编辑器无法理解你所输入的内容。 如果出现这种情况，请确保你已经完全复制了示例代码：数字应该放在括号内，
    并在每个数字之间加上逗号，行末应有分号；还要确保ellipse的拼写正确。
  your-first-sketch11: >-
    编程起步中最困难的事情之一是需要非常准确地使用语法。 浏览器并不总能聪明地知道你的意思，并且可能对标点的位置非常挑剔。
    通过一些练习，你会逐渐习惯。编辑器底部左侧是控制台区域， 你可以在这里查看编辑器输出的任何错误信息。
  your-first-sketch12: 接下来，我们将跳到一个更加有趣的示例。修改上一个示例并尝试：
  your-first-sketch13: >-
    这个程序创建了一个宽400像素，高400像素的画布，并在鼠标位置开始绘制白色圆形。 当按下鼠标按钮时，圆形颜色会变成黑色。
    运行代码，移动鼠标，单击以查看效果。
  your-first-sketch14: 在画布上，有多个跟随鼠标路径绘制的圆形
  first-sketch-heading1: 带有椭圆形的代码段
  first-sketch-heading2: 屏幕阅读器用户的注意事项
  first-sketch-heading3: 带有交互的代码片段
  what-next-title: 下一步
  learn1: '查看 '
  learn2: 学习页面
  learn3: ' 和 '
  learn4: 示例页面
  learn5: ' 以获取更多信息。'
  learn6: '观看 '
  learn7: The Coding Train
  learn8: ' 和 '
  learn9: Kadenze
  learn10: ' 的视频教程。'
  reference1: '查看完整的 '
  reference2: 参考文档
  reference3: 。
  learn11: '如果您希望使用p5和屏幕阅读器，请查看 '
  learn12: p5屏幕阅读器教程
  processing-transition1: '如果您以前使用过Processing，请阅读 '
  processing-transition2: 'https://github.com/processing/p5.js/wiki/Processing-transition'
  processing-transition3: Processing过渡教程
  processing-transition4: ' 了解如何从Processing转换到p5.js，以及它们之间的主要区别。'
  book1: >-
    本教程的部分内容改编自Lauren McCarthy、Casey Reas和Ben Fry的书籍《从p5.js开始》， O'Reilly / Make
    2015年版权所有。所有权利均已保留。 上一次修改是在 2019 年 p5.js 贡献者会议上。
download:
  Download: 下载
  download-intro: >-
    欢迎！虽然此页面的标题为“下载”，此页面其实包括了一系列可以用来下载程式库或在网上开始使用程式库的链接。我们在这里尝试将初学者最可能需要的链接摆在第一位，而较有经验的使用者能在此页面下方找到其他有用的链接。
  editor-title: 编辑器
  p5.js-editor: p5.js 编辑器
  p5.js-editor-intro: 此链接将开启 p5.js 编辑器网页已让您能直接开始使用 p5.js。
  editor-includes: 使用 p5.js Editor 开始编写程式，不需要任何另外的设置！
  complete-library-title: 完整程式库
  complete-library-intro1: 这是个包含 p5.js 程式库、p5.sound 附加程式库及范例项目的下载文件。它并不包含编辑器。请参考
  complete-library-intro2: 入门
  complete-library-intro3: 以了解如何设置一个 p5.js 项目。
  p5.js-complete: p5.js 完整版
  includes-1: 包含
  includes-2: p5.js、p5.sound.js 及空白范例
  includes-3: 版本
  single-files-title: 单一文件
  single-files-intro: 这些是 p5.js 程式库文件的下载网址或网上链接。它们并不包括任何其他文件。
  single-file: 单一文件：
  p5.js-uncompressed: 易读版本
  compressed: 极简化版本
  link: 链接：
  statically-hosted-file: 静态链接文件
  etc-title: Github 资源
  older-releases: 旧版本/更新日志
  github-repository: 程式代码库（GitHub）
  report-bugs: 报告问题、缺陷及错误
  supported-browsers: 浏览器支持
  support-title: 支持 p5.js!
  support-options: 支持方式
  support-1: 我们需要您的帮助！p5.js 是免费的开源软件。我们希望使我们的社区尽可能的开放和包容。您可以通过向支持 p5.js 的组织
  support-2: 捐款来支持这项工作。您的捐款可以支持 p5.js 的软件开发、制作范例代码及教程之类的教育资源、
  support-3: 奖学金
  support-4: 及
  support-5: 社群活动。
  support-17: p5.js 贡献者会议在匹兹堡的 CMU STUDIO for Creative Inquiry 举行（图像由：Taeyoon Choi）
  support-18: >-
    Processing Fellow Saskia Freeke 在伦敦组织的 Code Liberation x Processing （代码解放 x
    Processing）研讨会（图像由：Code Liberation Foundation）
  support-19: SFPC主持的 “学习如何教导，教导如何学习” 会议（图像由Kira Simon-Kennedy）
  support-20: >-
    Processing Foundation Fellow Cassie Tarakajian 在 Code Art Miami
    组织的研讨会（图像由：Christian Arévalo Photography）
  support-21: >-
    Taeyoon Choi 及 ASL（美式手语）翻译员在 Signing Coders p5.js（p5.js
    手语编程员）研讨会（图像由：Taeyoon Choi）
  support-22: Google Summer of Code（Google 夏日程式码大赛）开幕（图像由：Taeyoon Choi）
  support-23: >-
    Processing Foundation Fellow Cassie Tarakajian 在 Code Art Miami
    组织的研讨会（图像由：Christian Arévalo Photography）
  support-24: >-
    Luisa Pereira 及 Yeseul Song 帮助举办一个手语为主的 p5.js 研讨会，由 Taeyoon Choi
    带领（图像由：Taeyoon Choi）
  support-25: p5.js 贡献者会议在匹兹堡的 CMU STUDIO for Creative Inquiry 举行（图像由：Taeyoon Choi）
  support-26: >-
    Processing Fellow Digital Citizens Lab 在 International Center of Photography
    所主持的 STEM（科学、科技、工程、数学）教学小组（图像由：International Center of Photography）
  support-27: 在智利圣地亚哥的 p5.js 研讨会的参与者，由 Aarón Montoya-Moraga 带领（图像由：Aarón Montoya-Moraga）
  support-28: >-
    Claire Kearney-Volpe 帮助举办一个手语为主的 p5.js 研讨会，由 Taeyoon Choi 带领（图像由：Taeyoon
    Choi）
  support-29: Processing Foundation Fellow DIY Girls 在洛杉矶举办的创意编程课程（图像由：DIY Girls）
  support-30: Processing Fellow Digital Citizens Lab
  support-31: UCLA DMA 及 NYU ITP 的 p5.js 聚会
  support-32: Processing Foundation
  support-33: >-
    在原本的 Processing 软件多过十年的工作后成立于 2012 年。Processing Foundation
    原旨为提升视觉艺术界的软件素养及提升科技界的视觉素养 —
    并让这些领域更加接近不同的社群。我们的目标是赋予来自不同兴趣及背景的人学习编程与用编程制作创意作品的权利，尤其是那些可能无法得到这些工具及资源的人。
  support-17-alt: ''
  support-18-alt: ''
  support-19-alt: ''
  support-20-alt: ''
  support-21-alt: ''
  support-22-alt: ''
  support-23-alt: ''
  support-24-alt: ''
  support-25-alt: ''
  support-26-alt: ''
  support-27-alt: ''
  support-28-alt: ''
  support-29-alt: ''
  support-30-alt: ''
  support-31-alt: ''
learn:
  learn-title: 学习
  teach-title2: Teach
  learn1: 以下教程将提供更多深入及详细的步骤，专注于特定的主题。请参考
  learn2: 范例页面
  learn3: 以查看 p5.js 多种功能的简单范例。
  introduction-to-p5js-title: p5.js 简介
  hello-p5js-title: Hello p5.js
  hello-p5js: >-
    This short video will introduce you to the library and what you can do with
    it.
  getting-started-title: 入门简介
  getting-started: 欢迎来到 p5.js！<br>这简介将涵盖 p5.js 的基本设置。
  p5js-overview-title: 一览 p5.js
  p5js-overview: p5.js 主要功能的介绍
  p5js-processing-title: p5.js 及 Processing
  p5js-processing: 两者之间的差别及如何将两者之间互相转换。
  p5-screen-reader-title: p5 及荧幕阅读器
  p5-screen-reader: 设置 p5 以让它可以和荧幕阅读器一起使用。（英文内文）
  using-local-server-title: 本地伺服器
  accessible-labels-title: Writing accessible canvas descriptions
  accessible-labels: Using labels to make your code accessible to screen readers.
  accessible-labels-intro: Introduction
  accessible-labels-intro-1: >-
    In this tutorial, you'll learn how to use <a class = "code" href =
    "https://p5js.org/reference/#/p5/describe">describe()</a> , <a class =
    "code" href =
    "https://p5js.org/reference/#/p5/describeElement">describeElement()</a>,  <a
    class = "code" href =
    "https://p5js.org/reference/#/p5/gridOutput">gridOutput()</a>,  and <a class
    = "code" href =
    "https://p5js.org/reference/#/p5/textOutput">textOutput()</a>. These
    functions add labels to  your canvas so that it’s readable for screen
    readers and other assistive technologies.
  accessible-labels-what-is-labeling: What is labeling?
  accessible-labels-what-is-labeling-1: >-
    When you use the <a class = "code" href =
    "https://p5js.org/reference/#/p5/createCanvas">createCanvas()</a> function,
    you  create a canvas HTML element. This canvas element displays the image
    generated by your code as a bitmap (a raster graphic made up of pixels). 
    Unlike most HTML elements, the canvas doesn’t provide any description about
    its contents to screen readers.  That’s why we created the <a class = "code"
    href = "https://p5js.org/reference/#/p5/describe">describe()</a>,  <a class
    = "code" href =
    "https://p5js.org/reference/#/p5/describeElement">describeElement()</a>,  <a
    class = "code" href =
    "https://p5js.org/reference/#/p5/gridOutput">gridOutput()</a>, and  <a class
    = "code" href =
    "https://p5js.org/reference/#/p5/textOutput">textOutput()</a> functions. 
    These functions add labels to your canvas that tell the screen reader how to
    describe it.
  accessible-labels-why-labeling-matters: Why labeling matters
  accessible-labels-why-labeling-matters-1: >-
    Screen readers (and text-to-speech software) are helpful for lots of people,
    <a href = "https://www.w3.org/WAI/perspective-videos/speech/"
    target="_blank" rel="noopener noreferrer"> regardless of ability or
    context</a>. For example, a visually impaired person searching the web might
    use a screen reader to  understand the contents of a site. If a site’s code
    isn’t properly labeled for assistive technologies,  the screen reader
    software won’t be able to communicate what’s on the site to its user.
    Someone else  might be using a text-to-speech software because they have
    dyslexia and find listening to the site’s  content more comprehensible than
    reading it. There are also people who use these assistive software  to
    multi-task, so they can listen to an article on the web and wash dishes, or
    complete other chores. 
  accessible-labels-why-labeling-matters-2: >-
    No matter the purpose or person, making sure your code is readable by these
    assistive software allows  more people to engage with your work in
    meaningful ways.
  accessible-labels-available-labels: Available labeling functions
  accessible-labels-available-labels-1: p5.js offers four different functions for labeling your canvas
  accessible-labels-available-labels-li-1: >-
    <a class = "code" href =
    "https://p5js.org/reference/#/p5/describe">describe()</a> provides a
    description of the canvas contents.  This function's parameters include:
    <span class = "code">text</span>, the label itself; and <span class =
    "code">display</span>,  an optional parameter to set the visibility of the
    label.
  accessible-labels-available-labels-li-2: >-
    <a class = "code" href =
    "https://p5js.org/reference/#/p5/describeElement">describeElement()</a>
    describes a specific element or a  specific grouping of elements in a
    canvas. This function's parameters include: <span class =
    "code">name</span>, the title for the label;  <span class =
    "code">text</span>, the label itself; and <span class =
    "code">display</span>, an optional parameter to set the visibility of the
    label.
  accessible-labels-available-labels-li-3: >-
    <a class = "code" href =
    "https://p5js.org/reference/#/p5/textOutput">textOutput()</a> generates a
    list describing the canvas size, color,  as well as each visual element’s
    color, position, and the area it covers within the canvas. This function’s
    only parameter is  <span class = "code">display</span>, an optional
    parameter to set the visibility of the label.
  accessible-labels-available-labels-li-4: >-
    <a class = "code" href =
    "https://p5js.org/reference/#/p5/gridOutput">gridOutput()</a>, like <a class
    = "code" href =
    "https://p5js.org/reference/#/p5/textOutput">textOutput()</a>,  generates a
    list of the canvas' qualities and elements. Along with this list, this
    function also creates an HTML table that plots the  spatial location of each
    shape within the canvas. This function's only parameter is <span class =
    "code">display</span>, an optional parameter  to set the visibility of the
    label.
  accessible-labels-prerequisites: Prerequisites
  accessible-labels-prerequisites-1: >-
    Your project's code should be near completion before you begin labeling. To
    write clear and effective  labels, you should have a clear understanding
    about what visuals your code creates within the canvas  element. 
  accessible-labels-prerequisites-2: >-
    For example, if you started writing your labels before you had a clear
    understanding of the resulting  visual of your canvas, your labels and your
    visuals may communicate different messages, like the code  example below:
  accessible-labels-steps-for-labeling: Steps for labeling your p5.js code
  accessible-labels-steps-for-labeling-step-1: 1. Plan your labeling strategy
  accessible-labels-steps-for-labeling-step-1-1: >-
    Your labeling strategy will change based on your project’s complexity and
    purpose.
  accessible-labels-steps-for-labeling-step-1-2: >-
    No matter how complicated your project may be, always provide a brief
    description of your canvas in  <a class = "code" href =
    "https://p5js.org/reference/#/p5/setup">setup()</a> using the  <a class =
    "code" href = "https://p5js.org/reference/#/p5/describe">describe()</a>
    function. If you do not provide any labels in your code,  screen readers
    will describe your canvas as a blank HTML element.
  accessible-labels-steps-for-labeling-step-1-3: >-
    Place this label in the <a class = "code" href =
    "https://p5js.org/reference/#/p5/setup">setup()</a> section of your code, 
    and provide a 1-3 sentence description of your canvas in its <span class =
    "code">text</span> parameter. This description should only provide details
    about  the visual elements of your canvas. 
  accessible-labels-steps-for-labeling-step-1-4: >-
    As stated previously, you do not need to begin your description with “A p5
    canvas element…” or anything similar, since the  screen reader will declare
    the element type before reading your label.
  accessible-labels-steps-for-labeling-step-1-5: >-
    Along with the <a class = "code" href =
    "https://p5js.org/reference/#/p5/describe">describe()</a> label, use either
    the  <a class = "code" href =
    "https://p5js.org/reference/#/p5/describeElement">describeElement()</a>,  <a
    class = "code" href =
    "https://p5js.org/reference/#/p5/textOutput">textOutput()</a>,  or <a class
    = "code" href =
    "https://p5js.org/reference/#/p5/gridOutput">gridOutput()</a>  function to
    add more detailed labels within your code.
  accessible-labels-steps-for-labeling-step-1-6: >-
    The <a class = "code" href =
    "https://p5js.org/reference/#/p5/textOutput">textOutput()</a> and  <a class
    = "code" href =
    "https://p5js.org/reference/#/p5/gridOutput">gridOutput()</a> functions can 
    describe the shapes on your canvas, but they can’t interpret your intention
    in using the shapes. Keep context in mind when choosing  which function(s)
    to use. Is it better to describe the flower as “eight circles and a
    rectangle”, or as “a flower with red  petals and a green stem”? What kind of
    labeling will provide the best description of your canvas? If  you are
    creating larger visuals with many shapes, use <a class = "code" href =
    "https://p5js.org/reference/#/p5/describeElement">describeElement()</a>  to
    label each group of shapes.
  accessible-labels-steps-for-labeling-step-1-7: >-
    Do not use both the <a class = "code" href =
    "https://p5js.org/reference/#/p5/textOutput">textOutput()</a> and  <a class
    = "code" href =
    "https://p5js.org/reference/#/p5/gridOutput">gridOutput()</a> functions to
    describe the same canvas. Using both will  cause similar descriptions to
    appear twice, which is confusing to screen readers. The same goes for  using
    <a class = "code" href =
    "https://p5js.org/reference/#/p5/textOutput">textOutput()</a> or  <a class =
    "code" href = "https://p5js.org/reference/#/p5/gridOutput">gridOutput()</a>
    with  <a class = "code" href =
    "https://p5js.org/reference/#/p5/describeElement">describeElement()</a>
    labels. It’s best to choose one function to  supplement your <a class =
    "code" href = "https://p5js.org/reference/#/p5/describe">describe()</a>
    label.
  accessible-labels-steps-for-labeling-step-1-complex: Complex projects
  accessible-labels-steps-for-labeling-step-1-complex-1: >-
    Use vanilla ARIA labeling and custom-built fallback labels instead of p5’s
    labeling functions if your canvas:
  accessible-labels-steps-for-labeling-step-1-complex-li-1: >-
    Has content that changes extensively via external interactive elements
    (elements outside the canvas)
  accessible-labels-steps-for-labeling-step-1-complex-li-2: Interacts with DOM elements written outside of the canvas code
  accessible-labels-steps-for-labeling-step-1-complex-li-3: Requires the user’s attention if the canva's visual content changes
  accessible-labels-steps-for-labeling-step-1-complex-li-4: >-
    Has complex element layouts that cannot be accurately labeled with the <a
    class = "code" href =
    "https://p5js.org/reference/#/p5/describe">describe()</a>,  <a class =
    "code" href =
    "https://p5js.org/reference/#/p5/describeElement">describeElement()</a>,  <a
    class = "code" href =
    "https://p5js.org/reference/#/p5/textOutput">textOutput()</a>, or  <a class
    = "code" href =
    "https://p5js.org/reference/#/p5/gridOutput">gridOutput()</a> functions
  accessible-labels-steps-for-labeling-step-1-complex-2: >-
    For more information about fallback content, visit <a href =
    "https://www.w3.org/html/wg/wiki/DefinitionFallBackContent" target="_blank"
    rel="noopener noreferrer">W3C’s Wiki</a>.  For more information about
    complex ARIA labeling, visit <a href =
    "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes"
    target="_blank" rel="noopener noreferrer">Mozilla’s "ARIA states and
    properties"</a>  and <a href = "https://www.w3.org/TR/using-aria/"
    target="_blank" rel="noopener noreferrer">W3C’s "Using ARIA"</a>.
  accessible-labels-steps-for-labeling-step-2: 2. Write your main and supporting label(s)
  accessible-labels-steps-for-labeling-step-2-1: Begin labeling your canvas using the function(s) that best serve your users.
  accessible-labels-steps-for-labeling-step-2-2: >-
    While labeling, only provide descriptions of the visual aspects of your
    canvas. You don’t need to  describe how or what functions create the visuals
    present on the canvas, only how the end result  visuals appear within the
    canvas.
  accessible-labels-steps-for-labeling-step-2-using-de: >-
    Using <a class = "code" href =
    "https://p5js.org/reference/#/p5/describeElement">describeElement()</a>
  accessible-labels-steps-for-labeling-step-2-using-de-1: >-
    When using the <a class = "code" href =
    "https://p5js.org/reference/#/p5/describeElement">describeElement()</a>
    function to label your code, provide a unique title and a description  no
    more than 1-2 sentences long. Only label the parts of your code that depict
    the most important visual  aspects of your canvas.
  accessible-labels-steps-for-labeling-step-2-using-de-2: >-
    Within each <a class = "code" href =
    "https://p5js.org/reference/#/p5/describeElement">describeElement()</a>
    label, discuss the important qualities of that element. Is the element 
    animated? Is the element interactive? What meaning does the element provide
    to the project?
  accessible-labels-steps-for-labeling-step-2-using-de-3: >-
    If your canvas contains any <a class = "code" href =
    "https://p5js.org/reference/#/p5/text">text()</a> elements that are
    important to the general understanding of the  image, make a separate label
    for them. Label any legible text with quotation marks around it in the 
    label, as in <span class = "code">describeElement("Text", "The words 'hello,
    world' displayed in green at the center of a  black canvas.")</span>.
  accessible-labels-steps-for-labeling-step-2-using-de-4: >-
    You don’t need to start each label with “A p5 canvas…” or something similar.
    The screen reader will  call out the element type before reading your
    labels:
  accessible-labels-steps-for-labeling-step-2-using-de-5: >-
    Limit the number of <a class = "code" href =
    "https://p5js.org/reference/#/p5/describeElement">describeElement()</a>
    functions present within your code as much as possible. If you  have to use
    more than 10 <a class = "code" href =
    "https://p5js.org/reference/#/p5/describeElement">describeElement()</a>
    functions to describe your canvas, consider using a labeling  strategy that
    affords more complexity (such as vanilla ARIA labeling).
  accessible-labels-steps-for-labeling-step-2-using-go-to: >-
    Using <a class = "code" href =
    "https://p5js.org/reference/#/p5/gridOutput">gridOutput()</a> or <a class =
    "code" href = "https://p5js.org/reference/#/p5/textOutput">textOutput()</a>
  accessible-labels-steps-for-labeling-step-2-using-go-to-1: >-
    <a class = "code" href =
    "https://p5js.org/reference/#/p5/gridOutput">gridOutput()</a> and <a class =
    "code" href = "https://p5js.org/reference/#/p5/textOutput">textOutput()</a> 
    generate their information based on the code of the visual element, such as
    its size, color, and shape.  Unlike <a class = "code" href =
    "https://p5js.org/reference/#/p5/describeElement">describeElement()</a>, you
    only need to use one label to describe all  your canvas's visual elements.
  accessible-labels-steps-for-labeling-step-2-animated: Projects with animated or interactive elements
  accessible-labels-steps-for-labeling-step-2-animated-1: >-
    Individual interactive elements, such as HTML buttons, dropdowns, or inputs,
    don’t need labels. These  elements are built outside of the p5.js canvas and
    are interpreted by screen readers. However, this  means the <a class =
    "code" href = "https://p5js.org/reference/#/p5/gridOutput">gridOutput()</a>
    and  <a class = "code" href =
    "https://p5js.org/reference/#/p5/textOutput">textOutput()</a> functions
    won’t provide any information about these interactive  inputs.
  accessible-labels-steps-for-labeling-step-2-animated-2: >-
    If a canvas element is animated and/or interactive, represent its current
    state or qualities in the label.  So long as you place the functions within
    the <a class = "code" href =
    "https://p5js.org/reference/#/p5/draw">draw()</a> function,  they will
    automatically update with the shape’s new information (except for <a class =
    "code" href = "https://p5js.org/reference/#/p5/textOutput">textOutput()</a> 
    and <a class = "code" href =
    "https://p5js.org/reference/#/p5/gridOutput">gridOutput()</a>,  which will
    update even when listed in <a class = "code" href =
    "https://p5js.org/reference/#/p5/setup">setup()</a>). If you are using  <a
    class = "code" href =
    "https://p5js.org/reference/#/p5/describeElement">describeElement()</a>, use
    template strings to update the element’s description:
  accessible-labels-steps-for-labeling-step-2-do-donts: Labeling do’s and don’ts
  accessible-labels-steps-for-labeling-step-2-do-donts-1: >-
    <i>Don’t</i> use screen reader labels as a way of commenting your code.
    Labels should only summarize the  resulting visual elements within a canvas.
    If you overuse screen reader labels, you may end up  complicating the screen
    reader’s interpretation of the canvas rather than helping it.
  accessible-labels-steps-for-labeling-step-2-do-donts-2: >-
    <i>Do</i> make your label descriptions short and accurate. Use full
    sentences for your labels, and write  in the present tense when describing
    elements.
  accessible-labels-steps-for-labeling-step-3: 3. Test your labels
  accessible-labels-steps-for-labeling-step-3-1: >-
    Be sure to test your labels before publishing your sketch. Labels are only
    available to screen readers  by default.To see the output during
    development, pass <span class = "code">LABEL</span> as the last argument to
    the function.
  accessible-labels-steps-for-labeling-step-3-2: 'When testing your labels, consider the following questions:'
  accessible-labels-steps-for-labeling-step-3-2-li-1: >-
    Do your canvas labels provide enough information for someone to understand
    the sketch’s purpose? 
  accessible-labels-steps-for-labeling-step-3-2-li-2: >-
    If this canvas exists on a web page among other content, would someone have
    a good understanding of how the canvas relates to its  surrounding context?
  accessible-labels-steps-for-labeling-step-3-3: >-
    Be sure to remove the <span class = "code">LABEL</span> argument once you’ve
    tested the output. With <span class = "code">LABEL</span>  active, screen
    readers are forced to read the fallback text and the visible label text when
    focused on the canvas. This is  confusing for them.
  accessible-labels-steps-for-labeling-step-3-4: >-
    You may also download a screen reader and use it to test your code. For more
    information about using  screen readers, visit <a href =
    "https://www.w3schools.com/accessibility/accessibility_screen_readers.php"
    target="_blank" rel="noopener noreferrer">W3 School’s "Accessibility Screen
    Readers"</a>.
  accessible-labels-conclusion: Conclusion
  accessible-labels-conclusion-1: >-
    Once you've tested your labels, your canvas should be accessible to screen
    reader technology!
  accessible-labels-conclusion-2: >-
    If you would like more information about ARIA labeling, visit <a href =
    "https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA"
    target="_blank" rel="noopener noreferrer">MDN’s ARIA</a>.
  accessible-labels-conclusion-3: >-
    <i>Notice any errors or typos? Please let us know. If you would like to
    contribute to this tutorial,  feel free to issue a <a href =
    "https://github.com/processing/p5.js-website" target="_blank" rel="noopener
    noreferrer">pull request</a>!</i>
  using-local-server: 如何在 Mac OSX、Windows 或 Linux 上设置本地伺服器。
  p5js-wiki-title: p5.js wiki
  p5js-wiki: Additonal documentation and tutorials contributed by the community
  connecting-p5js-title: 链接 p5.js
  creating-libraries-title: 制作程式库
  creating-libraries: 制作 p5.js 附加程式库。
  nodejs-and-socketio-title: node.js 及 socket.io
  nodejs-and-socketio: 链接 node.js 伺服器及 p5.js，通过 socket.io 通讯。
  programming-topics-title: 编程问题
  beyond-the-canvas-title: 画布之外
  beyond-the-canvas: 创建及控制画布以外的元素。
  getting-started-in-webgl-other-tutorials-title: 其他教程
  getting-started-in-webgl-other-tutorials-p: '这个教程是关于使用 p5.js 中 WebGL 基础的系列之一。以下是其他教程： '
  getting-started-in-webgl-other-tutorials-tut1: 坐标和变换
  getting-started-in-webgl-other-tutorials-tut2: 在 WebGL 中创建自定义几何图形
  getting-started-in-webgl-other-tutorials-tut3: 样式和外观
  getting-started-in-webgl-other-tutorials-tut4: 入门 Shaders
  getting-started-in-webgl-other-tutorials-you-are-here: （你现在处于这里）
  getting-started-in-webgl-title: 在 WebGL 中开始
  getting-started-in-webgl-glossary-title: 词汇表
  getting-started-in-webgl-coords-and-transform-title: 坐标和变换
  getting-started-in-webgl-coords-and-transform: “3D 设置、坐标和变换的基础知识”
  getting-started-in-webgl-coords-and-transform-p1x1: >-
    p5.js 是创建 2D 图形的强大工具，同时也能够实现 3D 图形。 要开始使用 3D，需要学习一些新概念，本文档将介绍一些对于任何 3D
    程序都非常重要的想法。
  getting-started-in-webgl-coords-and-transform-toc-title: Table of Contents
  getting-started-in-webgl-coords-and-transform-heading1: What is WebGL
  getting-started-in-webgl-coords-and-transform-p2x1: >-
    WebGL 是一个库，为我们在 Web 浏览器中创建 3D 图形提供了所需的工具。 简单地说，它允许我们做各种数学运算，帮助排列和显示 3D 对象。
    通过其特殊的 WebGL 模式，p5.js 可以更容易地与 WebGL 一起使用。
  getting-started-in-webgl-coords-and-transform-p3x1: >-
    在 3D 中工作引入了许多复杂性，尤其是当一个画面涉及到运动、纹理、光照等方面。
    幸运的是，计算机有专门的硬件，非常适合执行这些计算，即图形处理单元（GPU）。 GPU 能够同时处理许多事情，这在处理像素和空间中的许多形状时特别重要。
  getting-started-in-webgl-coords-and-transform-p4x1: 让我们开始设置 p5.js 来使用 WebGL， 通过将第三个参数传递到 <a class="code">createCanvas()</a>。
  getting-started-in-webgl-coords-and-transform-heading2: 3D 坐标空间：在 3D 中定位
  getting-started-in-webgl-coords-and-transform-info1x1: >-
    如果坐标系统不太清楚，可以重新查看名为 <a
    href="{{root}}/learn/coordinate-system-and-shapes.html">坐标系和形状</a> 的教程。
  getting-started-in-webgl-coords-and-transform-info1x2: 坐标系和形状
  getting-started-in-webgl-coords-and-transform-p5x1: >-
    在 2D 和 3D 中工作最基本的区别之一是最明显的：多了一个维度。 除了我们图纸中元素的水平和垂直位置（x 和 y 轴）之外，3D 还增加了深度，即
    z 轴。
  getting-started-in-webgl-coords-and-transform-p6x1: >-
    When drawing in 2D, the point (0,0) is located at the top left corner of the
    screen. In WebGL mode, the origin of the sketch (0,0,0) is located in the
    middle of the screen. By default, the x-axis goes left-to-right, y-axis goes
    up-to-down, and the z-axis goes from further-to-closer.
  getting-started-in-webgl-coords-and-transform-heading3: 变换：3D 图形的位置和大小
  getting-started-in-webgl-coords-and-transform-p7x1: >-
    p5.js 有一些方法，<a class="code"
    href="{{root}}/reference/#/p5/translate">translate()</a>、<a class="code"
    href="{{root}}/reference/#/p5/rotate">rotate()</a> 和 <a class="code"
    href="{{root}}/reference/#/p5/scale">scale()</a>，可以用来在空间中定位和定向对象。每个方法都会影响所谓的<em>模型矩阵</em>，它们的集合被称为对象的<em>变换</em>。这些方法对于
    2D 和 3D 绘制都可用。
  getting-started-in-webgl-coords-and-transform-p7x2: '和 '
  getting-started-in-webgl-coords-and-transform-p7x3: >-
    我们可以使用一些方法在空间中定位和定向对象。每种方法都会影响所谓的<strong>模型矩阵</strong>。
    这些方法的集合被称为对象的<strong>变换</strong>。这些方法适用于2D和3D绘图。
  getting-started-in-webgl-coords-and-transform-subheading1: translate()：将对象移动到指定位置
  getting-started-in-webgl-coords-and-transform-p8x1: >-
    <a class="code" href="{{root}}/reference/#/p5/translate">translate()</a>
    可以将原点沿指定方向移动， 调用<a class="code">translate()</a>之后绘制的任何内容都将相对于该点定位。 <a
    class="code">translate()</a> 接受x、y和z值的参数。使用上面的滑块更改盒子的平移量，看看它沿每个轴如何移动。
    下面的代码演示了如何在<a class="code">box()</a> 形状上进行简单的平移。
  getting-started-in-webgl-coords-and-transform-subheading2: rotate()：将对象定向到指定位置
  getting-started-in-webgl-coords-and-transform-p9x1: >-
    <a class="code"
    href="{{root}}/reference/#/p5/rotate">rotate()</a>可以将之后绘制的内容重新定向方向。
  getting-started-in-webgl-coords-and-transform-p10x1: >-
    有几种方法可以使对象在3D中旋转。大多数情况下，最简单的方法是调用像<a class="code"
    href="{{root}}/reference/#/p5/rotateX">rotateX()</a>、 <a class="code"
    href="{{root}}/reference/#/p5/rotateY">rotateY()</a>和 <a class="code"
    href="{{root}}/reference/#/p5/rotateZ">rotateZ()</a>这样的方法
  getting-started-in-webgl-coords-and-transform-p10x2: '和 '
  getting-started-in-webgl-coords-and-transform-p10x3: >-
    它们分别允许围绕特定轴进行旋转。每种方法都接受一个指定旋转角度的参数。 尝试在上面的示例中移动滑块，查看如何在每个轴上执行旋转。
    以下代码展示了这些方法的使用。
  getting-started-in-webgl-coords-and-transform-p11x1: >-
    默认情况下，p5.js将期望角度以弧度为单位。 弧度使用从0- <a class="code">TWO_PI</a>的数字来指定角度。
    要使用度数，可以使用<a class="code">radians()</a>将度数转换为弧度， 或使用<a
    class="code">angleMode(DEGREES)</a>。
  getting-started-in-webgl-coords-and-transform-info2x1: >-
    <p>您还可以使用<a class="code" href="{{root}}/reference/#/p5/rotate">rotate()</a>，
    它允许您使用向量作为第二个参数指定要围绕哪个轴旋转。</p>
  getting-started-in-webgl-coords-and-transform-info2x2: ', 它允许您使用向量作为第二个参数指定要围绕哪个轴旋转。'
  getting-started-in-webgl-coords-and-transform-subheading3: 'scale(): 空间尺寸'
  getting-started-in-webgl-coords-and-transform-p12x1: >-
    <a class="code"
    href="{{root}}/reference/#/p5/scale">scale()</a>会改变其后绘制的任何内容的大小。
    与迄今为止描述的其他方法一样，它接受x、y和z值的参数。
  getting-started-in-webgl-coords-and-transform-heading4: 变换的顺序很重要！
  getting-started-in-webgl-coords-and-transform-p13x1: >-
    一开始可能感觉难以预测的是变换的顺序。每个变换都会影响下一个变换。例如，如果调用 <a class="code">rotate()</a>，然后是 <a
    class="code">translate()</a>，那么该平移的方向将受到旋转的影响。整个坐标系在旋转和移动，不仅仅是形状本身。
  getting-started-in-webgl-coords-and-transform-p14x1: >-
    变换可以以任何顺序执行，但是使用<strong>translate</strong>、<strong>rotate</strong>，然后<strong>scale</strong>会是最直观的。
    先进行平移，然后进行旋转，产生将形状移动到新位置并围绕该位置旋转的效果。
  getting-started-in-webgl-coords-and-transform-p15x1: >-
    在下面的例子中，尝试改变<a class="code">translate()</a>和<a
    class="code">rotateY()</a>的顺序，看看它如何影响对象的绘制位置。
  getting-started-in-webgl-coords-and-transform-p16x1: >-
    p5.js还有一些方法可以控制何时应用变换：<a class="code"
    href="{{root}}/reference/#/p5/push">push()</a>和<a class="code"
    href="{{root}}/reference/#/p5/pop">pop()</a>。 <a class="code">push()</a>和<a
    class="code">pop()</a>使单独移动对象更容易。 <a class="code">push()</a>方法保存并设置当前变换，<a
    class="code">pop()</a>方法恢复这些变换。 在<a class="code">push()</a>和<a
    class="code">pop()</a>之间进行的任何变换都将隔离到代码的该部分。 如果不使用<a
    class="code">push()</a>和<a
    class="code">pop()</a>，则必须跟踪已经发生的任何变换，这可能会变得复杂并且难以理解。
    考虑下面的示例，在我们的草图中放置了两个盒子。 如果不使用<a class="code">push()</a>和<a
    class="code">pop()</a>来定位第二个盒子，则必须考虑第一个变换。 在更复杂的3D场景中，这可能会很难跟踪。
  getting-started-in-webgl-coords-and-transform-p16x2: 和
  getting-started-in-webgl-coords-and-transform-p16x3: >-
    <a class="code">push()</a>和<a class="code">pop()</a>使单独移动对象更容易。 <a
    class="code">push()</a>方法保存当前变换和样式设置。 然后，在执行新的变换之后，使用<a
    class="code">pop()</a>方法将我们恢复到原始变换。 结果是，在<a class="code">push()</a>和<a
    class="code">pop()</a>之间进行的任何变换或样式更改都会隔离到代码的该部分。 如果不使用<a
    class="code">push()</a>和<a
    class="code">pop()</a>，则必须跟踪已经发生的任何变换，这可能会变得复杂并且难以理解。
    考虑下面的示例，在我们的草图中放置了两个盒子。如果不使用<a class="code">push()</a>和<a
    class="code">pop()</a>来定位第二个盒子，则必须考虑第一个变换。 在更复杂的3D场景中，这可能会很难跟踪。
  getting-started-in-webgl-coords-and-transform-p17x1: >-
    现在让我们尝试使用<a class="code">push()</a>和<a class="code">pop()</a>来做同样的事情。
    现在，我们可以将对象平移至想要的位置，而无需记住坐标系统的位置。
  getting-started-in-webgl-coords-and-transform-info3x1: >-
    尽管这是一个更高级的主题，但每个变换都会影响到所谓的模型矩阵。 变换矩阵与视图矩阵和投影矩阵相结合，这两个矩阵帮助模拟相机的视图，
    这种组合结果形成了我们的3D场景！<a
    href="https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/WebGL_model_view_projection">了解有关模型视图投影的更多信息</a>
  getting-started-in-webgl-coords-and-transform-p18x1: >-
    在下面的示例中，尝试删除<a class="code">push()</a>和<a
    class="code">pop()</a>，看看这些变换如何影响绘制的第二个对象。
  getting-started-in-webgl-coords-and-transform-heading5: 3D中的基本形状
  getting-started-in-webgl-coords-and-transform-p19x1: >-
    到目前为止，我们只使用了<a
    class="code">box()</a>，但p5.js还有七个不同的预定义几何形状，您可以在您的草图中使用这些基本的预定义几何形状，这些基本的预定义几何形状通常被称为“原语”。
  getting-started-in-webgl-coords-and-transform-p20x1: >-
    这些原语形状方法包括：<a class="code" href="{{root}}/reference/#/p5/box">box()</a>，<a
    class="code" href="{{root}}/reference/#/p5/plane">plane()</a>，<a
    class="code" href="{{root}}/reference/#/p5/sphere">sphere()</a>，<a
    class="code" href="{{root}}/reference/#/p5/ellipsoid">ellipsoid()</a>，<a
    class="code" href="{{root}}/reference/#/p5/cone">cone()</a>，<a class="code"
    href="{{root}}/reference/#/p5/cylinder">cylinder()</a>和<a class="code"
    href="{{root}}/reference/#/p5/torus">torus()</a>。
  getting-started-in-webgl-coords-and-transform-p20x2: and
  getting-started-in-webgl-coords-and-transform-p21x1: >-
    可以从头开始或从另一个程序创建的3D模型创建自定义几何体。有关自定义几何体的更多信息，请参阅 <a
    href="{{root}}/learn/getting-started-in-webgl-custom-geometry.html">自定义几何体教程</a>.
  getting-started-in-webgl-coords-and-transform-p21x2: '自定义几何体教程    '
  getting-started-in-webgl-coords-and-transform-heading6: 结论
  getting-started-in-webgl-coords-and-transform-p22x1: >-
    通过掌握基本的 3D 坐标空间控制、变换和基本形状，您应该能够开始创建基本的 3D 场景。在《WebGL
    入门》系列中，本教程后面的教程将介绍自定义几何、允许您调整场景外观，并向您介绍一些基本着色器编程，以推进您的草图更进一步。
  getting-started-in-webgl-coords-and-transform-glossary-term1-title: GPU（图形处理单元）
  getting-started-in-webgl-coords-and-transform-glossary-term1-definition: GPU（图形处理单元）是一种特别适合并行计算的硬件，使其在3D图形方面非常强大。
  getting-started-in-webgl-coords-and-transform-glossary-term2-title: 模型
  getting-started-in-webgl-coords-and-transform-glossary-term2-definition: 可以从文件中保存和加载的自定义3D几何图形。
  getting-started-in-webgl-coords-and-transform-glossary-term3-title: 矩阵
  getting-started-in-webgl-coords-and-transform-glossary-term3-definition: 一种特殊的数组，可以保存关于几何变换的信息。
  getting-started-in-webgl-coords-and-transform-glossary-term4-title: 相机
  getting-started-in-webgl-coords-and-transform-glossary-term4-definition: 3D场景的视点。
  getting-started-in-webgl-coords-and-transform-glossary-term5-title: 变换
  getting-started-in-webgl-coords-and-transform-glossary-term5-definition: 也称为 <em>transformation</em>，这指的是几何体的组合缩放、旋转和平移。
  getting-started-in-webgl-coords-and-transform-glossary-term6-title: 顶点
  getting-started-in-webgl-coords-and-transform-glossary-term6-definition: 3D空间中的一个点，具有 x、y、z 位置。
  getting-started-in-webgl-coords-and-transform-glossary-term7-title: 面
  getting-started-in-webgl-coords-and-transform-glossary-term7-definition: 由三个点组成的实体表面。
  getting-started-in-webgl-custom-geometry-title: 在 WebGL 中创建自定义几何体
  getting-started-in-webgl-custom-geometry: 在 WebGL 中创建自定义几何体
  getting-started-in-webgl-custom-geometry-p1x1: >-
    p5.js 有许多基本形状，如<a class="code">box()</a>或<a class="code">sphere()</a>，但
    p5.js 也能够呈现复杂的自定义几何体，无论是从3D模型文件还是从代码中。本教程将演示如何将3D模型导入到 p5.js，以及如何从头开始创建几何体。
  getting-started-in-webgl-custom-geometry-info1x1: 如果您是 3D 新手，请查看
  getting-started-in-webgl-custom-geometry-info1x2: 教程。
  getting-started-in-webgl-custom-geometry-toc-title: 目录
  getting-started-in-webgl-custom-geometry-heading1: 从文件中加载3D模型
  getting-started-in-webgl-custom-geometry-p2x1: >-
    可以使用 OBJ 或 STL 文件将自定义几何体导入 p5.js。这些文件通常是在诸如 Blender 之类的 3D 建模工具中生成的，该工具在构建
    3D 场景时提供了更多控制。 这是使用<a class="code"
    href="{{root}}/reference/#/p5/loadModel">loadModel()</a>方法完成的，应在<a
    class="code">preload()</a>中使用。
  getting-started-in-webgl-custom-geometry-p2x2: >-
    方法，应在 <a class="code">preload()</a> 中使用。然后可以使用<a class="code">function</a>
    在模型中进行绘制，如下面的示例所示。
  getting-started-in-webgl-custom-geometry-p2x3: ，使用绘制函数在模型中进行绘制，如下面的示例所示。
  getting-started-in-webgl-custom-geometry-p3x1: >-
    自定义模型可能遇到的常见问题是缩放。根据模型的构建方式，在 p5.js 中呈现时其大小可能会完全不同，甚至过小以至于无法渲染。 <a
    class="code">loadModel()</a>方法包括一个 normalize 参数，可以将模型调整为在p5.js中更好运行的大小。
  getting-started-in-webgl-custom-geometry-info2x1: >-
    请注意，当前不支持带有颜色的 STL 文件，但是您可以使用材料或纹理添加颜色，您可以在<a
    href="{{root}}/learn/getting-started-in-webgl-appearance.html">样式和外观</a>教程中学习。
  getting-started-in-webgl-custom-geometry-info2x2: 样式和外观
  getting-started-in-webgl-custom-geometry-info2x3: 教程。
  getting-started-in-webgl-custom-geometry-heading2: 创建基本过程几何体
  getting-started-in-webgl-custom-geometry-p4x1: >-
    几何体还可以使用代码进行过程化定义。这是创建可以移动或使用您自己的一组规则形成的几何体的绝佳方式。 有许多方法可以使用它们在 p5.js 中类似于 2D
    绘图的方式创建 3D 几何体。例如， <a class="code">quad()</a>、<a
    class="code">triangle()</a>、<a class="code">rect()</a> 和 <a
    class="code">circle()</a> 等方法都有额外的参数，使它们可以用于 3D。
  getting-started-in-webgl-custom-geometry-p5x1: >-
    还有其他方法可以更好地控制几何体。可以使用<a class="code"
    href="{{root}}/reference/#/p5/beginShape">beginShape()</a>、 <a class="code"
    href="{{root}}/reference/#/p5/vertex">vertex()</a> 和 <a class="code"
    href="{{root}}/reference/#/p5/endShape">endShape()</a> 逐点定义形状。
    下面的示例演示了如何使用这些方法在数学上构建 3D 形状。
  getting-started-in-webgl-custom-geometry-p5x2: '和 '
  getting-started-in-webgl-custom-geometry-p5x3: 下面的示例演示了如何使用这些方法在数学上构建 3D 形状。
  getting-started-in-webgl-custom-geometry-p6x1: >-
    还有一个强大的类，<a class="code"
    href="{{root}}/reference/#/p5/p5.Geometry">p5.Geometry</a>，p5.js 内部使用 <a
    class="code">loadModel()</a>，但也可用于定义自定义几何体，提供可以有助于计算面和法线的工具。
  getting-started-in-webgl-custom-geometry-p6x1_: ，p5.js 内部使用<a class="code">loadModel()</a>，但也可用于定义自定义几何体，提供可以有助于计算面和法线的工具。
  getting-started-in-webgl-custom-geometry-p6x2: >-
    在 3D 中，面指的是由三个或四个点组成的集合，这些点形成了一个表面，使我们的几何体具有实体的外观。法线是垂直于面的方向，这有助于 p5.js
    计算表面上的光照。
  getting-started-in-webgl-custom-geometry-p6x3: >-
    在下面的示例中，使用 <a class="code">p5.Geometry</a> 绘制几何体的网格点。然后，<a
    class="code">computeFaces()</a> 用于使几何体具有实体外观， <a
    class="code">computeNormals()</a> 允许我们的几何体具有适当的照明。
  getting-started-in-webgl-custom-geometry-heading3: 结论
  getting-started-in-webgl-custom-geometry-p7x1: 现在，您应该能够创建自定义的几何体，从其他工具或代码中创建独特的形状变为可能。花一些时间使用各种 3D 建模工具，以便找到最适合您的那个。
  getting-started-in-webgl-custom-geometry-glossary-term1-title: 过程化的
  getting-started-in-webgl-custom-geometry-glossary-term1-definition: 意味着某物是通过数学定义的，而不是通过存储的数据，例如文件。
  getting-started-in-webgl-custom-geometry-glossary-term2-title: 模型
  getting-started-in-webgl-custom-geometry-glossary-term2-definition: 几何形状的表示。
  getting-started-in-webgl-custom-geometry-glossary-term3-title: STL
  getting-started-in-webgl-custom-geometry-glossary-term3-definition: '"STL"（通常代表“标准制图语言”）是用于 3D 模型的文件格式。它仅存储有关几何形状的信息。'
  getting-started-in-webgl-custom-geometry-glossary-term4-title: OBJ
  getting-started-in-webgl-custom-geometry-glossary-term4-definition: >-
    "OBJ" 是一种开放的文件格式，它存储几何数据以及一些材质和纹理数据。在 p5.js
    中，我们只能使用它的几何数据，尽管仍可以使用纹理将图像映射到表面。
  getting-started-in-webgl-custom-geometry-glossary-term5-title: 面
  getting-started-in-webgl-custom-geometry-glossary-term5-definition: 介于三点之间生成的固定表面。
  getting-started-in-webgl-custom-geometry-glossary-term6-title: 法线
  getting-started-in-webgl-custom-geometry-glossary-term6-definition: 垂直于面的方向，通常在计算照明或使用材料时需要。
  getting-started-in-webgl-custom-geometry-glossary-term7-title: 规范化
  getting-started-in-webgl-custom-geometry-glossary-term7-definition: 更改某物以适应标准范围。
  getting-started-in-webgl-appearance-title: 样式和外观
  getting-started-in-webgl-appearance: 在 WebGL 中的材质和照明的基础知识
  getting-started-in-webgl-appearance-p0x1: >-
    创作 3D 作品不仅仅是关于几何形状。相机、灯光和材质是创建视觉上有趣的 3D 场景的重要组成部分。p5.js
    提供了许多工具，使我们可以改变我们几何形状的外观。
  getting-started-in-webgl-appearance-toc-title: 目录
  getting-started-in-webgl-appearance-heading1: 相机和视图
  getting-started-in-webgl-appearance-p1x1: >-
    相机是 3D 场景的基本组成部分；它为我们提供 3D 所特有的空间和维度感。 在 p5.js 中，WebGL 模式默认提供透视相机，但我们可以使用 <a
    class="code" href="{{root}}/reference/#/p5/perspective">perspective()</a> 或 
    <a class="code" href="{{root}}/reference/#/p5/ortho">ortho()</a>  来更改这一点。
  getting-started-in-webgl-appearance-p1x2: '或 '
  getting-started-in-webgl-appearance-p2x1: 透视相机会使对象倾斜，因此它们随着远离视角点的距离而变小，在远处消失。 这与正交相机形成对比，后者的几何形状随着距离增加而保持相同大小，并且没有消失点。
  getting-started-in-webgl-appearance-p3x1: >-
    我们可以使用透视相机更改的一个设置是视场（FOV）。这是用来描述我们相机看到的角度。
    在简单的示例中，它可能会产生缩放效果，但它将改变形状在远处改变大小的方式。
  getting-started-in-webgl-appearance-p4x1: >-
    在 3D 中使用相机时，另一个重要的术语是相机的视锥体<em>frustum</em>。
    相机的视锥体是相机视图的形状，一个金字塔形状，其中可以显示几何形状。视锥体包括<em>近平面和远平面</em>。
    近平面定义了几何形状与相机之间必须呈现的最小距离。远平面定义了几何形状与相机之间可以呈现的最大距离。
    每个平面都可以更改，以影响相机可以看到多近和多远。有时将这种有选择地包含几何形状的过程称为“裁剪”。
  getting-started-in-webgl-appearance-p5x1: >-
    相机可以通过向 <a class="code">camera()</a> 传递参数来移动，
    但在代码中不断移动和调整相机可能会很繁琐，特别是当你在尝试各种想法时。 p5.js 有一个特殊的相机方法 <a class="code"
    href="{{root}}/reference/#/p5/orbitControl">orbitControl()</a>，可以使用鼠标缩放、平移和定位相机。
  getting-started-in-webgl-appearance-p5x2: 可以使用鼠标缩放、平移和定位相机。
  getting-started-in-webgl-appearance-p6x1: >-
    一个场景可以有多个相机，但一次只能有一个相机处于活动状态。 在 p5.js 中，草图默认只有一个透视相机，但可以通过调用 <a
    class="code">perspective()</a>（使用新参数）或 <a class="code">ortho()</a> 来更改相机类型。
    <a class="code">camera()</a> 可以用于更改活动相机的位置和相机所看向的位置。在下面的草图中试试吧。
  getting-started-in-webgl-appearance-heading2: 照明
  getting-started-in-webgl-appearance-p7x1: 照明是 3D 场景中的另一个重要组成部分。为了能够传达形状和深度，必须拥有光源。p5.js 中有一些不同类型的光源可供草图使用。
  getting-started-in-webgl-appearance-lighting-list1: 在场景中使用环境光会使得所有物体都显示得更亮，不考虑光源的位置或方向。
  getting-started-in-webgl-appearance-lighting-list2: 方向光从一个方向照射，这对于传达场景的深度或需要一个“太阳”光源时特别有用。该方法接受颜色和方向参数。
  getting-started-in-webgl-appearance-lighting-list3: 点光源从一个点向所有方向发射光线，类似于灯泡。该方法接受颜色和光源位置参数。
  getting-started-in-webgl-appearance-lighting-list4: 聚光灯从一个点向一个方向发射光线。该灯光发射成锥形，其半径和浓度可以调节。
  getting-started-in-webgl-appearance-lighting-list5: '`noLights()` 函数可以使所有后续几何体呈现出无光照状态。当你想要平坦、未着色的几何体时，这很有用'
  getting-started-in-webgl-appearance-p8x1: >-
    这些灯光应该在<a class="code">draw()</a>函数中使用。在一个场景中可以同时使用最多5个灯光，
    从而使您能够组合具有多样化和复杂光源的场景。尝试勾选和取消下面交互示例中的复选框，
    看看灯光如何混合在一起。对于每个活动光源，都有其位置或方向的视觉指示器，但这些仅用于说明目的！
  getting-started-in-webgl-appearance-p9x1: 在这个例子中，尝试注释或取消注释每个光源，并尝试调整它们的参数。
  getting-started-in-webgl-appearance-heading3: 材料和纹理
  getting-started-in-webgl-appearance-p10x1: >-
    物体的外观可以根据它们的材料而异。材料决定光如何与几何图形相互作用，以及如何将颜色（或纹理）应用于物体。材料可以各不相同，
    使物体闪亮、粗糙，甚至贴上图像纹理。
  getting-started-in-webgl-appearance-p11x1: 在这个交互式示例中，尝试选择每种不同的材料，看看它们对几何图形外观的影响。您可以移动鼠标，看看定向光对材料的影响。
  getting-started-in-webgl-appearance-p12x1: 尝试在这个示例中注释或取消注释不同的光源：
  getting-started-in-webgl-appearance-p13x1: >-
    通过使用<a class="code">texture()</a>可以实现更多自定义材料。简而言之，这些是可以映射到几何图形表面的图像。
    这些纹理可以从图像中导入，甚至可以使用着色器在代码中生成。 要将纹理映射到几何图形上，请在preload()中使用 <a
    class="code">loadImage()</a>，然后在绘制形状之前调用<a class="code">texture()</a>。
  getting-started-in-webgl-appearance-info1x1: >-
    尽管着色器可以用于改变几何体的外观，但在本教程范围之外。因此，请确保在准备好时查看 <a
    href="{{root}}/learn/introduction-to-shaders.html">着色器简介</a>页面。
  getting-started-in-webgl-appearance-info1x2: 着色器简介
  getting-started-in-webgl-appearance-info1x3: 页面准备就绪时
  getting-started-in-webgl-appearance-heading4: 结论
  getting-started-in-webgl-appearance-p14x1: >-
    能够控制相机、灯光和材料将使你更有弹性地决定你的草图外观， 这将为你的 3D 草图引入自己的风格打开可能性。在"开始使用 WebGL"系列的以下教程中，
    我们将向您介绍着色器，这将使您能够以更有趣的方式改变草图的外观。
  getting-started-in-webgl-appearance-glossary-term1-title: 相机
  getting-started-in-webgl-appearance-glossary-term1-definition: 3D 场景的视点。
  getting-started-in-webgl-appearance-glossary-term2-title: 透视
  getting-started-in-webgl-appearance-glossary-term2-definition: 通过使远处的物体变小来给出深度感的投影方式。
  getting-started-in-webgl-appearance-glossary-term3-title: 正交
  getting-started-in-webgl-appearance-glossary-term3-definition: 正交的投影方式不受深度影响，给出二维外观。
  getting-started-in-webgl-appearance-glossary-term4-title: 视野
  getting-started-in-webgl-appearance-glossary-term4-definition: 表示相机可视范围的角度。
  getting-started-in-webgl-appearance-glossary-term5-title: 锥体
  getting-started-in-webgl-appearance-glossary-term5-definition: 表示相机完整可视区域的几何形状。
  getting-started-in-webgl-appearance-glossary-term6-title: 近和远平面
  getting-started-in-webgl-appearance-glossary-term6-definition: 近平面表示几何体必须距相机的最小距离才能被显示，而远平面则表示最大距离。
  getting-started-in-webgl-appearance-glossary-term7-title: 裁剪
  getting-started-in-webgl-appearance-glossary-term7-definition: 有选择地显示某些几何体而不是其他几何体，例如当几何体超出相机锥体范围时。
  getting-started-in-webgl-shaders-title: 着色器入门
  getting-started-in-webgl-shaders: 使用 WebGL 在 p5.js 中创建着色器的基础知识
  getting-started-in-webgl-shaders-p0x1: >-
    着色器是在图形处理单元（GPU）上运行的特殊程序，可以完成一些令人难以置信的任务。 它们利用 GPU
    一次处理多个像素，使其快速且特别适用于某些任务，例如生成噪声、应用模糊滤镜或对多边形进行着色。 一开始学习着色器编程可能会让人望而却步，需要与
    p5.js 的二维绘图不同的思路。本文档将概述着色器编程的基础知识，并指向其他资源。
  getting-started-in-webgl-shaders-toc-title: 目录
  getting-started-in-webgl-shaders-heading1: 设置
  getting-started-in-webgl-shaders-p1x1: >-
    p5.js 是处理着色器的好工具，因为它处理了大部分 WebGL 的设置，使您可以专注于着色器代码本身。在开始使用着色器之前，我们必须设置画布，使其使用
    p5.js WebGL 模型。
  getting-started-in-webgl-shaders-p2x1: >-
    着色器程序由两部分组成，一个<strong>顶点着色器</strong>和一个<strong>片元着色器</strong>。
    顶点着色器影响3D几何图形在屏幕上的绘制位置，片元着色器则负责影响颜色输出。这两个部分分别存储在不同的文件中，并通过 <a
    class="code">loadShader()</a>加载到p5.js中。一旦着色器被加载，它就可以在 <a
    class="code">draw()</a>中使用。下面的示例将展示如何在p5.js中设置基本着色器：
  getting-started-in-webgl-shaders-heading2: 着色语言 (GLSL)
  getting-started-in-webgl-shaders-p3x1: >-
    现在你可能想知道我们实际上在这些着色器文件中写了什么！着色器文件是用图形库着色语言
    (GLSL)编写的，它具有非常不同的语法和结构，与我们熟悉的语法和结构有很大不同。GLSL具有类似C的语法，这意味着它具有一些JavaScript中不存在的概念。
  getting-started-in-webgl-shaders-p4x1: 首先，着色语言在类型方面要严格得多。每个你创建的变量都必须用存储的数据类型进行标记。以下是一些常见类型的列表：
  getting-started-in-webgl-shaders-typelist: |
    vec2(x,y) // 由两个浮点数组成的向量
    vec3(r,g,b) // 由三个浮点数组成的向量
    vec4(r,g,b,a) // 由四个浮点数组成的向量
    float // 带小数点的数字
    int // 不带小数点的整数
    sampler2D // 对纹理的引用
  getting-started-in-webgl-shaders-p5x1: 通常情况下，着色语言比 JavaScript 更加严格。例如，缺少分号将导致错误信息。 不能在不同类型的数字之间进行交换，如浮点数或整数。
  getting-started-in-webgl-shaders-p6x1: 首先，让我们看一个基本的顶点着色器：
  getting-started-in-webgl-shaders-p7x1: >-
    这个顶点着色器以一个 <em>attribute</em> 开始，p5.js 使用它来与着色器共享顶点位置信息。这个 attribute 是一个 <a
    class="code">vec3</a>，意味着它包含一个 x、y 和 z 值。 Attributes
    是特殊的变量类型，只在顶点着色器中使用，并且通常由 p5.js 提供。
  getting-started-in-webgl-shaders-p8x1: >-
    所有顶点着色器都需要一个函数 <a class="code">main()</a>，在其中我们定位我们的顶点。
    在这个例子中，顶点着色器重新定位我们的顶点，使着色器输出占据整个画布。在 <a class="code">main()</a> 的末尾，我们必须给 <a
    class="code">gl_Position</a> 赋值。
  getting-started-in-webgl-shaders-p9x1: >-
    如果这还不是很清楚，也不要担心。顶点着色器起着重要的作用， 但通常只负责确保我们在片段着色器中创建的内容在几何体上正确地显示。
    在许多项目中，您可能会发现自己反复使用相同的顶点着色器。 另一方面，片段着色器负责着色器的颜色输出，是我们进行大量着色器编程的地方。
    以下是一个非常简单的片段着色器，它只会显示红色：
  getting-started-in-webgl-shaders-p10x1: >-
    片段着色器以指定 float 'precision' 开始。你可以选择低精度 lowp、中精度 mediump 或高精度 highp，
    不过在某些情况下，你可能会选择使用中精度或高精度。
  getting-started-in-webgl-shaders-p11x1: >-
    和顶点着色器类似，片段着色器也需要一个 <a class="code">main()</a> 函数， 但我们不会设置 <a
    class="code">gl_Position</a>， 而是将颜色分配给 <a class="code">gl_FragColor</a>。
  getting-started-in-webgl-shaders-p12x1: >-
    变量 <a class="code">myColor</a> 被定义为一个 <a class="code">vec4</a>， 这意味着它可以存储 4
    个值。由于我们处理的是颜色，因此这四个值分别是红、绿、蓝和 alpha。 着色器不使用像我们的草图一样的 0-255 颜色，而是使用介于 0.0 和
    1.0 之间的值。
  getting-started-in-webgl-shaders-p13x1: >-
    现在我们已经有了一个顶点着色器和一个片段着色器， 可以将它们保存到单独的文件中（shader.vert 和 shader.frag）， 并使用 <a
    class="code">loadShader()</a> 加载到我们的草图中。
  getting-started-in-webgl-shaders-heading3: Uniforms：从草图传递数据到着色器
  getting-started-in-webgl-shaders-p14x1: >-
    单独使用这样一个简单的着色器是有用的，但有时需要从 p5.js 草图向着色器传递变量。 这就是 uniforms 的作用。Uniforms
    是特殊的变量，可以从草图发送到着色器。 这使得能够更好地控制着色器。例如，您可以使用 p5.js 方法 <a
    class="code">millis()</a>  向我们的草图传递一个“时间” uniform，以引入运动。在着色器中，uniforms
    在文件顶部定义， 在 <a class="code">main()</a> 之外。在下面的片段着色器中， 我们创建了一个颜色 uniform <a
    class="code">myColor</a>，这将允许我们从草图中更改颜色。
  getting-started-in-webgl-shaders-p15x1: 回到我们的 p5.js 草图，现在可以使用 <a class="code">setUniform()</a> 发送这个颜色：
  getting-started-in-webgl-shaders-p16x1: >-
    还有 <em>attributes</em>，通常用于在草图和顶点着色器之间共享关于几何体的某些数据，和 <em>varying</em>
    变量，它们在顶点着色器和片段着色器之间共享数据。这使得可以在我们的片段着色器中使用位置或其他几何数据。
  getting-started-in-webgl-shaders-p17x1: 现在，将纹理坐标属性分配给变量之后，我们可以在片段着色器中使用纹理坐标。下面的示例结果是蓝色和紫红色的纹理坐标可视化。
  getting-started-in-webgl-shaders-info1x1: >-
    p5.js 为我们处理了许多属性和 uniforms，<a
    href="https://github.com/processing/p5.js/blob/374acfb44588bfd565c54d61264df197d798d121/contributor_docs/webgl_mode_architecture.md">您可以查看
    p5.js 发送到着色器的所有属性列表</a>。
  getting-started-in-webgl-shaders-heading4: 结论
  getting-started-in-webgl-shaders-p18x1: >-
    通过这些技能，您将能够创建一些基本的着色器，但着色器编程可以深入到无限深处，有许多着色器主题超出了本教程。在 p5.js 中，着色器可以成为创建可映射到
    3D 几何体的视觉、效果甚至纹理的强大工具。
  getting-started-in-webgl-shaders-p19x1: 想继续了解更多有关着色器的知识吗？请查看以下网站！
  getting-started-in-webgl-shaders-resources: >-
    <li><a href="https://thebookofshaders.com/">The Book of Shaders</a>，由
    Patricio Gonzalez Vivo 和 Jen Lowe 撰写的着色器指南。</li> <li><a
    href="https://itp-xstory.github.io/p5js-shaders/#/">P5.js着色器</a>，由Casey
    Conchinha和Louise Lessél编写的着色器指南。</li> <li><a
    href="https://www.shadertoy.com/">Shadertoy</a>，一个庞大的在线着色器集合，这些着色器都是在浏览器编辑器中编写的。</li>
    <li><a
    href="https://github.com/aferriss/p5jsShaderExamples">p5jsShaderExamples</a>，由Adam
    Ferriss编写的资源集。</li>
  getting-started-in-webgl-shaders-glossary-term1-title: 着色器 Shader
  getting-started-in-webgl-shaders-glossary-term1-definition: 可以有效地产生许多视觉效果和滤镜的特殊图形卡程序。
  getting-started-in-webgl-shaders-glossary-term2-title: GLSL
  getting-started-in-webgl-shaders-glossary-term2-definition: 图形库着色器语言（GLSL）是一种用于编写着色器的编程语言。
  getting-started-in-webgl-shaders-glossary-term3-title: Uniform
  getting-started-in-webgl-shaders-glossary-term3-definition: 从你的草图传递到着色器的变量。
  getting-started-in-webgl-shaders-glossary-term4-title: 矢量 Vector
  getting-started-in-webgl-shaders-glossary-term4-definition: 一种数据类型，它存储一组数字，通常是两个、三个或四个数字，表示颜色、位置等。
  getting-started-in-webgl-shaders-glossary-term5-title: 浮点数 Float
  getting-started-in-webgl-shaders-glossary-term5-definition: 一种存储浮点数的数据类型，可以有小数点。
  getting-started-in-webgl-shaders-glossary-term6-title: 整数 Int
  getting-started-in-webgl-shaders-glossary-term6-definition: 一种存储整数的数据类型，没有小数。
  getting-started-in-webgl-shaders-glossary-term7-title: 取样器 Sampler
  getting-started-in-webgl-shaders-glossary-term7-definition: 表示传递到着色器中的纹理的数据类型。
  getting-started-in-webgl-shaders-glossary-term8-title: 属性 Attribute
  getting-started-in-webgl-shaders-glossary-term8-definition: 在 p5.js 草图中生成并在顶点着色器中提供的 GLSL 变量。对于大多数情况，这些由 p5.js 提供。
  getting-started-in-webgl-shaders-glossary-term9-title: 纹理 Texture
  getting-started-in-webgl-shaders-glossary-term9-definition: 传递到着色器程序中的图像。
  getting-started-in-webgl-shaders-glossary-term10-title: 类型 Type
  getting-started-in-webgl-shaders-glossary-term10-definition: 描述数据类型的特征的标签，例如 int、float、vector 等。
  getting-started-in-webgl-shaders-glossary-term11-title: 顶点着色器 Vertex Shader
  getting-started-in-webgl-shaders-glossary-term11-definition: 该着色器程序的一部分负责将几何体定位在 3D 空间中。
  getting-started-in-webgl-shaders-glossary-term12-title: 片段着色器 Fragment Shader
  getting-started-in-webgl-shaders-glossary-term12-definition: 该着色器程序的一部分负责每个像素输出的颜色和外观。
  getting-started-in-webgl-framebuffers-title: Layered Rendering with Framebuffers
  getting-started-in-webgl-framebuffers: >-
    Setting up sketches that draw in multiple stages or access 3D depth
    information.
  color-title: 颜色
  color: 数码颜色的简介。
  coordinate-system-and-shapes-title: 坐标系统与图形
  coordinate-system-and-shapes: 利用坐标系统绘制简单图形。
  interactivity-title: 互动性
  interactivity: 鼠标与键盘的互动简介。
  program-flow-title: 程序流程
  program-flow: p5.js 控制程序流程简介。
  curves-title: 曲线
  curves: 介绍 p5.js 中的三种曲线：弧形，样条曲线和 Bézier 曲线。
  becoming-a-better-programmer-title: 成为更好的程式设计师
  debugging-title: 调试
  debugging: 调试程序的简介。
  optimizing-title: 优化 p5.js 程式
  optimizing: 此教程包含技巧及窍门以进一步优化您的程式，使它执行得更快更顺畅。
  test-driven-development-title: 单元测试及测试驱动开发
  test-driven-development: 避免安装时不必要的烦恼。什么是单元测试？如何使用单元测试？作者 Andy Timmons。
  contributing-to-the-community-title: 回馈社群
  development-title: 开发
  development: 开发设置简介及一览。
  looking-inside-title: 窥看 p5
  looking-inside: 一个简单易懂的教程，当中含括了 p5.js 源代码的文件格局及开发工具，作者 Luisa Pereira。
  writing-tutorial-title: 编写教程
  writing-tutorial: 编写 p5.js 教程的指南。
  writing-a-tutorial-title: p5.js 回馈指南
  writing-a-tutorial-author: 教程作者为 Tega Brain。
  writing-a-tutorial-1: >-
    我们欢迎教育家、合作者和一般爱好者开发更多 p5.js 教程。p5.js
    旨在让创意编程及开源软件开发更易接近及吸引更多元化的社群，同时我们也很高兴能够公开的发布 p5.js
    开发的完整过程及教程。我们现有的教程含括了各种课题如：学习使用 p5.js、编程技巧及如何帮助开发开源项目。
  writing-a-tutorial-2: 我们欢迎任何人提交全新教程，这份指南将包括新教程的提议、准备和提交的所需步骤。
  writing-a-tutorial-how-start-title: 如何开始：
  writing-a-tutorial-how-start-1: 先确定您所建议的课题尚未被涵盖，在此链接有
  writing-a-tutorial-how-start-2: 一个列表
  writing-a-tutorial-how-start-3: >-
    列出了正在进行中的教程。如果您想开发的课题被列为正在进行中 (in
    progress)，您或许能帮助完成该项目或为现有的项目做预备发布的工作，您只需联络我们。
  writing-a-tutorial-how-start-4: 如果您的课题尚未被涵盖及尚未被列为正在进行中，请寄份电子邮件去 education@p5js.org 并简略的讲述您所建议的教程。
  writing-a-tutorial-how-prepare-title: 如何准备网上 p5.js 教程：
  writing-a-tutorial-how-prepare-1: 当您以准备发布您的教程，请按着以下步骤准备您的教程给 p5.js 的网页。
  writing-a-tutorial-how-prepare-2: 将您的教程写在一个命名为 tutorial-name.hbs 的文件并跟从
  writing-a-tutorial-how-prepare-3: 这基本结构
  writing-a-tutorial-how-prepare-4: 。如该文件所示，它必须有以下开端：
  writing-a-tutorial-how-prepare-5: 您的教程文件夹将被置放在 p5.js 网站一个命名为“tutorials”的文件夹内。index.hbs 是
  writing-a-tutorial-how-prepare-6: p5.js 教程的主页
  writing-a-tutorial-how-prepare-7: 而 test-tutorial.hbs 为空白范例教程。
  writing-a-tutorial-how-prepare-8: 所有内容必须被包含在以下标签内：
  writing-a-tutorial-how-prepare-9: 内容格式可以使用 &lt;h1&gt;、&lt;h2&gt; 及 &lt;p&gt; 段落标签定义，如
  writing-a-tutorial-how-prepare-10: 空白范例教程所示。
  writing-a-tutorial-how-prepare-11: >-
    如果您的教程包含图像，它们必须被置放在 p5 网站的 asset 文件夹，该文件夹位于
    src/assets/learn/test-tutorial/images 如以下所示。
  writing-a-tutorial-how-prepare-12: 以在 HTML 页面内格式化您的源代码，请使用以下标签：
  writing-a-tutorial-embedding-title: 嵌入 p5.js 绘图
  writing-a-tutorial-embedding-1: >-
    使用 p5.js 的一个好处是您可以制作动画驱动、互动性或可编辑的教程，方便更简易的演示程式设计概念。您的范例必须是 p5.js
    绘图而它能用以下两种方式嵌入在您的教程中。
  writing-a-tutorial-embedding-2: 如果该范例需保持可编辑性，如在 p5.js 网站的
  writing-a-tutorial-embedding-3: 参考文献
  writing-a-tutorial-embedding-4: 内，该 p5 绘图必须使用 p5.js 部件以嵌入在 HTML 页面内，请使用
  writing-a-tutorial-embedding-5: 这指南
  writing-a-tutorial-embedding-6: 以了解如何使用该部件嵌入 p5.js 绘图，部件
  writing-a-tutorial-embedding-7: 。您也可以在
  writing-a-tutorial-embedding-8: 空白范例教程内
  writing-a-tutorial-embedding-9: 查看使用范例。
  writing-a-tutorial-embedding-10: 如果该范例必须是动画驱动或互动性的但并不需要是可编辑的，该 p5.js 绘图需使用 iframe 以嵌入在页面内，如以下所示。
  writing-a-tutorial-iframe-title: 使用 iframe 嵌入 p5 绘图
  writing-a-tutorial-iframe-1: >-
    iframe 让您能在原有的页面上开启一个通往另一个页面的窗口，同时该页面并不能直接和原有页面互动。在此例， 原有页面内会被嵌入一个含有您 p5.js
    绘图的 index.html 窗口。
  writing-a-tutorial-iframe-2: >-
    在 /src/assets/learn 文件夹内，将您的 p5 绘图置放在一个命名为您的绘图名的文件夹内如以下截图所示。这文件夹是您置放所有
    iframe 内将使用的图像及 p5 绘图的地方。
  writing-a-tutorial-iframe-3: 在含有您的 p5 范例的子文件夹内应该含有一个 sketch.js 文件及一个 embed.html 文件。
  writing-a-tutorial-iframe-4: >-
    请确保 embed.html 内的 p5 程式库有正确的链接。如果您的文件结构和以上相同，p5.js 程式库的链接将会是
    "../../../js/p5.min.js"。
  writing-a-tutorial-iframe-5: 这时你可以将 p5.js 绘图文件以 iframe 的方式嵌入在您的教程的 .hbs 文件中。iframe 嵌入代码如下：
  writing-a-tutorial-iframe-6: 以格式化 iframe，您可以将以下包括在文件内或使用样式表：
  writing-a-tutorial-iframe-7: 在以下链接您可以直接查看绘图：
  writing-a-tutorial-iframe-8: 而在以下您可以查看绘图被嵌入在 p5 网页中：
  writing-a-tutorial-iframe-9: 还有一项您需要注意的是您必须设置 iframe 的大小，以确保其大小不会随着窗口大小而改变。
  writing-a-tutorial-iframe-10: 另外，p5.js 程式库的文件链接并不是在 .eps 文件内（如其他教程），而是在您的 HTML 页面内（通常是 embed.html）。
  writing-a-tutorial-iframe-11: 更多关于嵌入 p5.js 绘图的信息可在
  writing-a-tutorial-embed-iframe-12: 以下链接查找。
  writing-a-tutorial-finishing-title: 结束
  writing-a-tutorial-finishing-1: >-
    一旦您完成编辑您的教程并且您的教程已经被许可，分叉 p5.js 网站的代码库，如以上所示的步骤准备您的教程然后开启一个 pull request 给
    p5.js 网站的代码库以便我们能发布您的教程！
  writing-a-tutorial-finishing-2: 谢谢！
  color-description1: >-
    以下教程来自于由 Daniel Shiffman 篇写的《 Learning Processing 》（原文英文），并由 Morgan Kaufmann
    出版，© 2008 Elsevier Inc。版权所有。此教程由 Kelly Chang 移植成 P5 代码。如果您发现任何错误或有任何评论，
  color-description2: 请联络我们。
  color-p1x1: >-
    在数码世界中，当我们要介绍一个颜色时，我们需要有一定的精确度。单纯说“嘿，你能把那圆形变成蓝绿色吗？”并不足够。在这，颜色可以被定义为在一个范围内的数字。让我们从最简单的范例开始：黑白色或灰渐色。0
    为纯黑色，255 为纯白色。在两者之间任何数字 – 50、87、162、209 等等 – 都是介于黑与白之间的灰色。
  color-p2x1: '只要在任何东西被画在画布上之前使用 '
  color-p2x2: ' 及 '
  color-p2x3: ' 函数，我们能设置任何图形的颜色。我们也能使用 '
  color-p2x4: ' 函数来设定窗口的背景颜色。如下范例。'
  color-code1: |-
    background(255);    // 设置背景颜色为白色
     stroke(0);          // 设置外线颜色为黑色
     fill(150);          // 设置填充色为灰色
     rect(50,50,75,100); // 绘制四方形
  color-p3x1: '使用 '
  color-p3x2: ' 及 '
  color-p3x3: >-
    函数将会分别去除外线色灰填充色。我们直觉上可能会以为“ stroke(0) ”表示没有外线，可是我们必须记得 0
    在这并不代表“无”，然而是代表黑色。此外，我们必须记得不要同时去除
  color-p3x4: ' 及 '
  color-p3x5: ' 不然不会有任何图形出现在画布上！'
  color-p4x1: 以此同时，如果我们绘制两个图形，p5.js 将会使用最近（代码内从上至下）所定义的外线色及填充色值。
  color-rgb-title: RGB 颜色值
  color-rgb-p1x1: >-
    您还记得手指绘画吗？选择混合三原色，我们能混合出任何颜色。同时混合所有颜色的结果是个浑浊的褐色。添加越多颜料，给颜色将会变得更暗。数码颜色也是使用三原色的混合来构造新的颜色的，但是它和颜料的混合原理不一样。首先，其原色为：红、绿、蓝（也为
    RGB 颜色，Red、Green、Blue）。而当您在混合荧幕上的颜色时，您将混合的是光而不是颜料，因此它的混合原理并不一样。
  color-rgb-li1: 红 + 绿 = 黄
  color-rgb-li2: 红 + 蓝 = 紫
  color-rgb-li3: 绿 + 蓝 = 青（蓝绿色）
  color-rgb-li4: 红 + 绿 + 蓝 = 白
  color-rgb-li5: 无色 = 黑
  color-rgb-p2x1: >-
    这假设所有色颜色都为最亮的亮度，但是您也能同时使用一系列的颜色值，因此一些红加上一些绿再加上一些蓝将等于灰，而一点红加上一点蓝将等于深紫色。虽然这可能需要一点时间来习惯，随着您编程及使用
    RGB
    颜色值来试验的经验越多，您会对它越熟悉，就如使用您的手指来混合颜色一样。当然您不能单纯说“混合一些红与一点蓝”，您必须提供确切的数值。就如灰渐值，个别颜色的值也是由介于
    0（不使用任何该颜色）与 255（完全使用该颜色）之间，而他们的顺序为红（R）、绿（G）及蓝（B）。通过更多的试验您将会对 RGB
    颜色更加熟悉，不过接下来我们将介绍一些使用常用颜色的代码。
  color-transparency-title: 颜色透明度
  color-transparency-p1x1: >-
    除了个别颜色的红、绿、蓝值之外，我们也能提供多一个可选性的值，此值被称为该颜色的 “alpha” 值。Alpha
    代表透明度，当您要绘制多个重叠部分透视的图形时，透明度在这就特别有用。一个图像的 alpha 值有时也会被称为该图像的 “alpha channel”。
  color-transparency-p2x1: >-
    我们必须记得像素并不是真的透明的，这单纯是个使用混合颜色所达成的便利错觉。p5.js
    在幕后将会使用该颜色的数值再加上一定百分率的另外一个颜色，创作出混合颜色的视觉错觉。（如果您有兴趣编程一个“粉色镜片”，您可以从这开始。）
  color-transparency-p3x1: Alpha 值也是介于 0 与 255 之间，0 代表完全透明而 255 代表完全不透明。
  color-custom-ranges-title: 自定义颜色值范围
  color-custom-ranges-p1x1: >-
    介于 0 与 255 之间的 RGB 颜色值并不是 p5.js 唯一定义颜色的方法，事实上，我们能使用多种方法来定义颜色。比如说，您可能比较偏向于使用
    0 至 100（如百分比）来定义颜色。为此您可以使用
  color-custom-ranges-p2x1: 以上函数表示：“OK，我们要使用红、绿、蓝值来定义颜色。而他们的值将介于 0 至 100 之间。
  color-custom-ranges-p3x1: 虽然一般上这么做不会提供任何便利，您可以为个别颜色值提供不同的数值范围：
  color-custom-ranges-p4x1: >-
    这时此函数表示：“红色值将会是介于 0 至 100 之间，绿色值将会是介于 0 至 500 之间，蓝色值将会是介于 0 至 10 之间，而 alpha
    至将会是介于 0 至 255 之间。
  color-custom-ranges-p5x1: 最后，虽然您通常在编程时只需要用到 RGB 色值，您也能使用 HSB（色调、饱和度及亮度）模式来定义颜色。简单来说，HSB 色值使用方法如下：
  color-custom-ranges-li1x1: 色调
  color-custom-ranges-li1x2: —色调值，默认上介于 0 至 360 之间。
  color-custom-ranges-li2x1: 饱和度
  color-custom-ranges-li2x2: —该颜色的饱和度，默认上介于 0 至 100 之间。
  color-custom-ranges-li3x1: 亮度
  color-custom-ranges-li3x2: —该颜色的亮度，默认上介于 0 至 100 之间。
  color-custom-ranges-p6x1: '使用函数 '
  color-custom-ranges-p6x2: ' 您就能设定您自选的数字范围。有些人会比较偏好使用介于 0 至 360 之间的数值来定义色调（就如色轮的 360 度一样）及 0 至 100 之间的数值来定义饱和度及亮度（介于 0% 至 100%）。'
  coordinate-system-description1: '以下教程来自于由 Daniel Shiffman 篇写的《 '
  coordinate-system-description2: Learning Processing
  coordinate-system-description3: ' 》（原文英文），并由 Morgan Kaufmann 出版，© 2008 Elsevier Inc。版权所有。此教程由移植成 P5 代码。如果您发现任何错误或有任何评论，'
  coordinate-system-description4: 请联络我们
  coordinate-system-description5: 。
  coordinate-system-description-title: 坐标系统及图形
  coordinate-system-description-p1x1: >-
    在我们开始使用 p5
    编程前，我们得先回到我们初中二时的记忆，找出一张坐标纸并画一条直线。两点之间最短的距离正是一条直线，我们将使用坐标纸上的直线的两点作为起点。
  coordinate-system-description-p2x1: >-
    以上图解显示一条介于点 A (1,0) 及点 B (4,5)
    的直线。如果您想要指示您的朋友画出一样的直线，您或许会对他说：“请从点一、零开始画一条直线去点四、五”。
    那么现在暂时想象您的朋友是个电脑而您想要指示这位数码朋友如何画在荧幕上出一样的直线。这情况下您也能使用一样的指示（只不过现在您可以跳过任何客气话但是必须使用精准的格式来表达）。该指示将会是如下：
  coordinate-system-description-p3x1: >-
    就算您还没学习过编写程式的语法，以上的语句应该仍然多少都能理解。我们提供电脑一个指令（我们称这指令为 function
    或函数）以让其画出直线（line）。此外，我们也提供一些用于定义该直线的参数：从点 A (1,0) 至点 B (4,5)。
    如果您假想这行代码为一个句子，这函数就是个动词而参数就是宾语。这代码句子使用分号作为句尾符号而不是句号。
  coordinate-system-description-p4x1: >-
    这里关键是了解电脑屏幕就只是个比较花俏的坐标纸。荧幕上每一个像素都代表着一个坐标 - 或两个数字：“x”（横向）及 “y”（纵向）-
    代表着在空间内一点的位置。而我们的工作就是指定该在这些像素坐标位置出现的图形及颜色。
  coordinate-system-description-p5x1: >-
    不过，这里有个需要注意的东西。那张来自初中二的坐标纸（使用笛卡尔坐标系）将 (0,0) 放置在正中央，y 轴由下至上 x
    轴由左至右。但是电脑窗口的坐标系在 y 轴的方向是相反的。(0,0) 被定义在左上角并往右边及往下延伸。
  coordinate-system-simple-shapes-title: 基本图形
  coordinate-system-simple-shapes-p1x1: 大多数使用 p5 的编程范例一般都会使视觉上的绘图范例。本质上，这些范例都和绘制图形及设定像素有关。我们将从绘制四种基本图形开始。
  coordinate-system-simple-shapes-p2x1: >-
    针对每个形状，我们需要问我们需要什么资料才可以定义该图形的位置及大小（更之后其颜色）然后再了解 p5
    如何接收这些信息。在以下的绘图内，我们将使用一个宽度为 100 像素及高度为 100 像素的画布。
  coordinate-system-simple-shapes-p3x1: 'A '
  coordinate-system-simple-shapes-p3x2: ' （点）是最简单的图形同时也是个不错的起点。以绘制一个点（point），我们只需要提供 x 及 y 坐标。'
  coordinate-system-simple-shapes-p4x1: 'A '
  coordinate-system-simple-shapes-p4x2: ' （直线）也不会特别困难，我们只需提供两个点 (x1,y1) 及 (x2,y2)：'
  coordinate-system-simple-shapes-p5x1: '当我们想要绘制一个 '
  coordinate-system-simple-shapes-p5x2: ' （四方形）时，这就会变得比较复杂一点。在 p5 内，一个四方形是由其左上角的坐标点与其宽度及高度来定义的。'
  coordinate-system-simple-shapes-p6x1: '第二个绘制四方形的方法是定义其中心点的位置，然后定义其宽度及高度。如果我们想要使用这方法，我们必须先表示我们要使用 '
  coordinate-system-simple-shapes-p6x2: ' 模式然后才输入绘制四方形的指示。请注意 p5 有区分大小写字母。'
  coordinate-system-simple-shapes-p7x1: '最后我们也能使用两个点来绘制一个四方形（分别定义左上角及右下角）。这模式为 '
  coordinate-system-simple-shapes-p7x2: 。请注意这范例在荧幕上显示的结果和上方的范例一样。
  coordinate-system-simple-shapes-p8x1: '当我们对于绘制一个四方形有了不错的掌握时，绘制一个 '
  coordinate-system-simple-shapes-p8x2: ' （椭圆形）可是轻而易举。事实上，它和绘制 '
  coordinate-system-simple-shapes-p8x3: ' （四方形）一样，唯一不同的是椭圆形将会被绘制在所定义的四方形内。'
  coordinate-system-simple-shapes-p8x4: ' 的默认模式为 '
  coordinate-system-simple-shapes-p8x5: ' 而不是 '
  coordinate-system-simple-shapes-p8x6: 。
  coordinate-system-simple-shapes-p9x1: >-
    现在让我们来看看一些使用更实际绘图设置的程式代码。我们将使用一个大小为 200 乘 200 的画布大小。请注意我们这里使用的
    createCanvas() 函数内所设定的画布高度及宽度。
  curves-description1: >-
    This tutorial is written by J David Eisenberg and ported by Sally Chen. If
    you see any errors or have comments, 
  curves-description2: ' please let us know.'
  curves-description3: 'This work is licensed under a '
  curves-description4: ' Creative Commons Attribution-NonCommercial-ShareAlinke 4.0 International License.'
  curves-p1x1: >-
    This short tutorial introduces you to the three types of curves in p5.js:
    arcs, spline curves, and Bézier curves.
  curves-arcs-title: ' Arcs '
  curves-arcs-p1x1: >-
    Arcs are the simplest curves to draw, it is defined an arc as a section of
    an ellipse. You call the function with these parameters:
  curves-arcs-p2x1: 'arc (x, y, w, h, start, stop, [mode])'
  curves-arcs-p3x1: >-
    The first four parameters (x,y,w,h) define the boundary box for your arc and
    the next two (start, stop), are the start and stop angles for the arc. These
    angles are given in radians and are measured clockwise with zero degrees
    pointing east and PI radians equals 180°.
  curves-spline-curves-title: Spline Curves
  curves-spline-curves-p1x1: >-
    Arcs are fine, but they’re plain. The next function, curve(), lets you draw
    curves that aren’t necessarily part of an arc. This function draws what is
    technically called a Rom-Catmull Spline. To draw the curve, you must specify
    the (x, y) coordinates of the points where the curve starts and ends. You
    must also specify two control points which determine the direction and
    amount of curvature. The first two and last two parameters are the control
    points of the curve. A call to curve() uses these parameters:
  curves-spline-curves-p2x1: 'curve (cpx1, cpy1, x1, y1, x2, y2, cpx2, cpy2);'
  curves-spline-curves-p3x1: How do the control points affect the way the curve looks?
  curves-spline-curves-p4x1: >-
    The tangent to the curve at the start point is parallel to the line between
    control point one and the end of the curve. The tangent to the curve at the
    end point is parallel to the line between the start point and control point
    2.
  curves-spline-curves-p5x1: >-
    The following diagram shows a curve and the points can be dragged to show
    how the control point affects the curve:
  curves-continuous-spline-curves-title: Continuous Spline Curves
  curves-continuous-spline-curves-p1x1: >-
    In isolation, a single curve() is not particularly appealing. To draw a
    continuous curve through several points, you are better off using the
    curveVertex() function. You can only use this function when you are creating
    a shape with the beginShape() and endShape() functions.In common usage,
    people use the first point of the curve as the first control point and the
    last point of the curve as the last control point.
  curves-bezier-curves-title: Bézier Curves
  curves-bezier-curves-p1x1: >-
    Though better than arcs, spline curves don’t seem to have those graceful,
    swooping curves that say “art.” For those, you need to draw Bézier curves
    with the bezier() function. As with spline curves, the bezier() function has
    eight parameters, but the order is different. The first two and last two
    parameters are the start and end points while middle  four points are the
    control points.
  curves-bezier-curves-p2x1: ' bezier(x1, y1, cpx1, cpy1, cpx2, cpy2, x2, y2); '
  curves-bezier-curves-p3x1: >-
    While it is difficult to visualize how the control points affect a curve(),
    it is slightly easier to see how the control points affect Bézier curves.
    Imagine two poles and several rubber bands. The poles connect the control
    points to the endpoints of the curve. A rubber band connects the tops of the
    poles. Two more rubber bands connect the midpoints of the poles to the
    midpoint of the first rubber band. One more rubber band connects their
    midpoints. The center of that last rubber band is tied to the curve. This
    diagram helps to explain, the points can be moved to change the curve.
  curves-continuous-bezier-curves-title: ' Continuous Bézier Curves'
  curves-continuous-bezier-curves-p1x1: >-
    Just as curveVertex() allows you to make continuous spline curves,
    bezierVertex() lets you make continuous Bézier curves. Again, you must be
    within a beginShape() / endShape() sequence. You must use vertex(startX,
    startY) to specify the starting anchor point of the curve. Subsequent points
    are specified with a call to:
  curves-continuous-bezier-curves-p2x1: 'bezierVertex(cpx1, cpy1, cpx2, cpy2, x, y);'
  curves-continuous-bezier-curves-p3x1: >-
    Here is a continuous Bézier curve, but it doesn’t join smoothly. In order to
    make two curves A and B smoothly continuous, the last control point of A,
    the last point of A, and the first control point of B have to be on a
    straight line.
  curves-summary-title: Summary
  curves-summary-li1: >-
    Use arc() when you need a segment of a circle or an ellipse. You can’t make
    continuous arcs or use them as part of a shape.
  curves-summary-li2: >-
    Use curve() when you need a small curve between two points. Use
    curveVertex() to make a continuous series of curves as part of a shape.
  curves-summary-li3: >-
    Use bezier() when you need long, smooth curves. Use bezierVertex() to make a
    continuous series of Bézier curves as part of a shape.
  teach-desc: 'Teach a p5 workshop or class, or create teaching materials!'
libraries:
  Libraries: 程式库
  core-libraries: 核心程式库
  community-libraries: 社群贡献程式库
  libraries-created-by: 作者：
  p5.sound: p5.sound 使用 Web Audio 扩展 p5 的功能，提供音频输入、播放、分析及合成功能。
  asciiart: p5.asciiart 是个简单易使用的图像 - ASCII 画作转换器。
  p5.ble: 一个启用 BLE 装置及 p5 绘图之间的沟通的 Javascript 编程库。
  p5.bots: p5.bots 让您通过网页浏览器和 Arduino（或其他微处理器）互动。您可以使用传感器资料来驱动绘图会使用绘图来驱动 LED、马达等等！
  p5.bezier: 一个画高阶贝塞尔曲线的库。
  p5.clickable: 事件驱动、易使用的 p5.js 按钮编程库。
  p5.cmyk.js: CMYK 色彩空间。
  p5.collide2D: p5.collide2D 提供一系列工具适用于计算在 p5.js 内的 2D 几何形状的碰撞检测。
  CO2Budget.js: 该库向与p5 * js相关联的编码人员，设计师和艺术家的创意社区开放了CO2-Countdown的概念。
  p5.createloop: 使用一行编码制作运用噪声及 GIF 输出的动画循环。
  p5.dimensions: p5.dimensions 扩展 p5.js 的向量功能以包括更高维数的计算。
  p5.EasyCam: 简单的3D摄像机控制，具有惯性平移，缩放和旋转功能。 主要贡献者 Thomas Diewald。
  p5.experience: 提供 p5.js 附加事件聆听功能并用以制作基于画布的网页应用程序的程式库。
  p5.func: p5.func 是个提供新物件及时间、频率和空间函数操作的 p5 扩展程式库。
  p5.geolocation: p5.geolocation 提供给 p5.js 获取、观察、计算使用者地理位置及地理围栏的功能。
  p5.glitch: p5.glitch extends p5.js for glitching images and binary files.
  p5.gibber: p5.gibber 提供快速音乐排序及音频合成功能。
  grafica.js: grafica.js 让您在您的 p5.js 绘图中添加简单但高度可配置的 2D 图表。
  p5.gui: p5.gui 提供您的 p5.js 绘图一系列图形用户界面。
  p5.j5: >-
    The full Johnny-Five.io Nodebots/robotics library for Arduino and other 
    microcontrollers made to work directly in browser with WebSerial or WebUSB.
  p5.localmessage: p5.localmessage 提供一个简易的界面以在不同绘图之间传递信息并使同时使用多个视窗制作绘图更容易！
  marching: 光栅到向量转换，等值面。
  mappa: Mappa 提供一系列给静态地图、重叠地图及地理数据的工具。特别适用于制作使用地理位置的应用程式。
  ml5.js: 建在Tensorflow.js的基础之上，ml5.js提供更简单的网页中使用机器学习算法和模型的方法。
  numero: A friendly and intuitive math library for p5.js.
  pdl.library: >-
    A set of functions and classes to create interactive diagrams for teaching 
    and learning physics.
  p5play: p5play 提供图像、动画、输入及碰撞检测功能以方便制作游戏或游戏类程式。
  p5.particle: Particle 及 Fountain 物件可以用以制作数据驱动效果，该数据可来自使用者互动或 JSON 文件。
  p5.party: >-
    p5.party is a library for easily creating networked multiuser games, apps, 
    and sketches.
  p5.Polar: p5.Polar 提供了数学抽象，使得创建美丽、万花筒式、径向图案变得容易。
  react-p5: This library lets you integrate p5 Sketches into your React App.
  p5.recorder: Record sketch canvas and audio.
  p5.Riso: p5.Riso 是个用来生成适合 Risograph 印刷的文件的程式库。它能帮助您将您的绘图转换成多色印刷。
  rita.js: RiTa.js 提供语言分析功能并也提供生成文字的功能。
  Rotating knobs: 使用自定图形及自定返回值范围，制作您能旋转的旋钮。
  p5.scenemanager: p5.SceneManager 帮助您制作有多个状态/场景的绘图。各个场景就比如一个在主要绘图内的绘图。
  p5.screenPosition: 在 p5.js 内添加来自 Processing 的 screenX 及 screenY 功能。
  p5.scribble: 绘制看起来粗略的 2D 形状。作者为 Janneck Wullschleger，来源自 Processing 原有程式库的代码移植。
  p5.serialport: >-
    p5.serial enables serial communication between devices that support serial
    (RS-232) and p5 sketches running in the browser.
  Shape5: Shape5 是个基本的 2D 程式库，用于教导第一次学习使用代码的小学生。
  p5.shape.js: 一个为 p5.js 添加更多简单图形的程式库。
  P5.slides: p5.slides is a presentation platform written in p5.js.
  p5snap: >-
    p5snap is a command-line interface that creates and saves snapshots of a  p5
    sketchp5snap is a command-line interface that creates and saves snapshots 
    of a p5 sketch on an interval.
  p5.speech: p5.speech 提供简单易用的 Web Speech 及语音识别的 API，使制作能说能听的绘图更加容易。
  p5.start2d.js: 使用像素、毫米、厘米或英寸为单位来制作 2D 静态艺术的 p5 附加程式库。
  p5.tiledmap: p5.tiledmap 提供绘图及便利功能以在您的绘图中加入地图。
  TiledPlay: >-
    A small library to bridge the functionality of p5.js, p5.play.js and 
    p5.tiled.js to easily create 2D platformer games using javascript.
  p5.touchgui: p5.js 多点触控及鼠标图形用户界面程式库。
  tramontana: >-
    Tramontana 是个可以用在多种设备上（iOS、Android、tramontana
    Board等）制作互动环境、互动空间或单纯测试大规模实验的简易平台。
  TurtleGFX: >-
    TurtleGFX allows to code with Turtle Graphics in JavaScript.  Great for
    education and creative coding.
  p5.tween: >-
    With p5.tween you can create easily animations as tween for your objects
    and  shapes.
  vida: Vida 是个添加摄像头（或视屏）运动测试及团块跟踪功能的简单程式库。
  p5.voronoi: p5.voronoi 提供您的 p5.js 绘图一系列用以绘制及使用 voronoi 图的工具。
  p5.wasm: p5.wasm 是个使用 Rust 编写并编译成 WebAssembly 的附加程式库，它提供一些常用的 p5.js 功能。
  p5.xr: 一个使用p5创建VR和AR草图的库。
  p5.3D: WebGL 3D 文字及图像。
  WEBMIDI.js: 可轻松地从 p5 中发送和接收 MIDI 消息的库。
  p5.buttons: 一个旨在简化按钮脚本化的库。
  p5.button: 一个小型的函数库，可直接在 p5.js 画布中设计和渲染简单或样式化按钮。
  p5.math.js: JavaScript 的数学运算已转换为简单的人类语言，以便能够快速理解。
  p5LiveMedia: 实时音频、视频、画布和数据共享。
  P5.Create: P5.create 是一个旨在有效创建游戏的库，提供保存、动画、碰撞和标记功能。
  p5.quadrille.js: p5.js 九宫格库。
  p5.animS: p5.animS 通过渲染它们的绘制过程来为 p5.js 形状提供动画效果。
  I_AM_UI: 一个用户界面库。
  simple.js: 面向年轻或新手编程者提供的帮助函数和默认值。
  p5.timer: 该库执行异步定时功能，例如倒计时、一次性定时器、%时间已过等，并封装 millis() 函数和其他相关的计算， 这些计算通常会拖慢您的代码。
  c2.js: c2.js 是基于计算几何、物理模拟、进化算法和其他模块的创作编程 JavaScript 库。
  Concave Hull: 计算2D空间中一组点的凹壳。
  p5.joystick: 连接和操作物理操纵杆。
  p5.webserial: 基于 Web Serial API（仅适用于 Chrome 和 Edge）库，可从浏览器内部与串行设备进行交互。
  p5.pattern: 一个用于 p5.js 的图案绘制库。
  p5.jacdac: p5js 的即插即用的微控制器。
  p5.PatGrad: p5.PatGrad 可让您向您的作品添加图案和渐变。
  p5.projection: 轻松将作品映射到现实世界表面上的投影映射。
  p5.filterRenderer: A library for p5.js WebGL mode to draw with depth blur and shadows.
  p5.capture: >-
    p5.capture 提供了一个简单易用的 GUI，可轻松记录 p5.js 动画， 并以各种格式（webm、gif、mp4、png、jpg 和
    webp）输出视频文件。
  p5.input: 为 p5.js 添加更多按键支持。
  p5.web-serial: 一个 Web Serial API 的程序，使用户可以无需设置地把 p5js 程序连接 Arduino 之类的单片机。
  p5.wasm.core: 用于 p5.js 的 Web Assembly 核心。
  p5.videorecorder: 使用音频记录您的画布，使其成为视频文件。
  p5.mapper: p5.mapper 是用于 p5.js 的投影映射库。该库使编码和基点交互、算法作品变得更加容易。
  p5.teach: 一个面向初学者的数学动画库，由 Nick McIntyre 和 Jithin KS 导师创建。
  p5.fab: p5.fab 可以从 p5.js 控制数字制造机器。
  p5.utils: 针对我的创意编程课提供的一组实用程序和附加功能，旨在帮助学生。
  using-a-library-title: 如何使用程式库
  using-a-library1: p5.js 程式库可以是任何扩展或延伸 p5.js 核心功能的 JavaScript 代码，它们主要分为两种。核心程式库（
  using-a-library3: ）是 p5.js 正式发布组的一部分，而社群贡献程式库是由 p5.js 社群成员持有、开发及维持的。
  using-a-library4: 如果您想在您的绘图内加入任何附加程式库，您只需在 HTML 文件内添加程式库的链接，此链接必须发生在 p5.js 的链接之后。一个 HTML 范例如下：
  create-your-own-title: 制作附加程式库
  create-your-own1: p5.js 欢迎任何人所制作的附加程式库！请参考
  create-your-own2: 程式库编辑教程（英文页面）
  create-your-own3: 以了解更多关于如何制作附加程式库的步骤。
  create-your-own4: 如果您编辑了一个附加程式库并且希望将其显示在此页面，请填入这份表格！
community:
  community-title: 社群
  community-statement-title: p5.js 社群宣言
  community-statement1: p5.js 是个对探索使用科技创作艺术及设计感兴趣的社群。
  community-statement2: >-
    我们声援及支持所有人，不论他们来自不同性别认同、性取向、种族、国籍、语言、神经型、大小、能力、阶级、宗教、文化、次文化、政治观点、年龄、技能等级、职业或背景。我们了解并不是所有人都有多余的时间、金钱或能力以活跃的参与社群活动但我们同时认可及鼓励各种参与方式。我们致力于促进障碍消除及培养能力。我们都是学习者。
  community-statement3: >-
    我们喜欢以下井号标签：#noCodeSnobs（因为我们重视社群多过效率）、#newKidLove（因为我们都曾经刚起步）、#unassumeCore（因为我们不假设预有知识）及
    #BlackLivesMatter（因为当然）。
  in-practice-title: 实践：
  in-practice1: 我们不假设预有知识也不隐射有些东西是所有人都应该知道的。
  in-practice2: 我们坚持积极的回应反馈请求，不论它们有多复杂。
  in-practice3: 我们欢迎新人并且优先考虑其他人的学习。我们致力于将如新人的热情带入我们的工作，因为我们相信新人和专家对我们来说都一样重要。
  in-practice4: 我们积极的承认及验证各种不同的贡献。
  in-practice5: 我们永远都愿意给予帮助或指导。
  in-times-conflict-title: 在起冲突时：
  in-times-conflict1: 我们聆听。
  in-times-conflict2: 我们清楚地表达自己同时理解其他人的感受。
  in-times-conflict3: 如果错在我们，我们承认错误、道歉及为我们的举止负责任。
  in-times-conflict4: 我们会一直寻求方法以改善我们自己及我们的社群。
  in-times-conflict5: 我们致力于在我们的社群内保持尊敬及开放性。
  in-times-conflict6: 我们让所有人都感到他们的意见都有被聆听。
  in-times-conflict7: 在我们的互动中，我们保持细心及友善。
  in-the-future-title: 在未来：
  in-the-future1: 未来就是现在。
  notes-title: Notes
  notes1: 'Please also see our '
  notes2: p5.js Code of Conduct
  notes3: '。此宣言可根据 '
  notes4: Creative Commons license
  notes5: ' 条款下使用。请随意分享及更改并注明出处。'
  contribute-title: 贡献
  contribute1: 我们的社群都会一直需要各种不同的帮助。
  develop-title: 开发。
  develop1: GitHub
  develop2: 是源代码被储存、议题被记录及关于代码的谈论发生的主要地方。请参考
  develop3: 开发教程
  develop4: 以开始开发代码或
  develop5: 制作您的附加程式库。
  document-title: 文献。
  document1: 所有人都喜欢参考文献。我们需要帮助
  document2: 移植范例
  document3: 、
  document4: 添加参考文献
  document5: 及制作教程。
  teach-title: 教学。
  teach1: 教导研讨会、课程、朋友或合作者！在 Twitter 上标记 @p5xjs，我们将尽所能分享您的成果。
  create-title: 制作。
  create1: p5.js 在寻找设计师、艺术家、代码编程师等以将您具创意及惊人的作业展示在主页上，同时您的作业也能启发其他人。请将您的作业呈交至
  create2: hello@p5js.org
  create3: 。
  donate-title: 捐献。
  donate1: p5.js 是个免费且开源的软件，由一群艺术家所制作。您可捐赠给
  donate2: Processing Foundation
  donate3: 以帮助支持 p5.js 的开发工作。
  contributors-conference-title: p5.js 贡献者会议
  contributors-conference1: 虽然我们大多数的工作都在网上进行，我们仍然会在现实中聚集。我们已在
  contributors-conference2: ' Pittsburgh, PA 的 Carnegie Mellon University 举办了两次贡献者会议。这会议聚集了多位艺术家、设计师、软件开发员及教育家以推进 p5.js 的发展。'
  participants-title: 参与者
  support-title: 支持
  support1: 我们的贡献者会议地点位于
  support2: 在 Carnegie Mellon University 内，并为一个给非典型、抗学科及跨学院研究的学术实验室，研究重点为艺术、科技及文化的交接。
  support3: 这项活动资金来自于
  support4: 所提供的资助及来自以下赞助者的慷慨支持：
  support5: 及
  support6: 谢谢！
  mailing-list-title: 邮件列表
  mailing-list-1: 请输入您的电子邮件地址以接收偶尔来自 Processing Foundation 的更新消息。
  2015contributors-conference-title: 贡献者会议 2015
  2015contributors-conference-date: 5月25日至31日
  2015contributors-conference1: 30个来自各种不同背景的参与者聚集在一起并花了一个星期在
  2015contributors-conference2: >-
    提善 p5.js
    编程环境的源代码、参考文献及社区外展工具。参与者来自香港、西雅图、洛杉矶、波士顿及纽约，多数都是在创意科技、互动设计及新媒体艺术的职业专家但另外也包括了数位来自
    Carnegie Mellon’s Schools of Art and Architecture 的大学本科和研究生。
  2015contributors-conference3: 摄影师为 Taeyoon Choi
  2015contributors-conference-diversity-title: 多元平等
  2015contributors-conference-diversity1: 在技术开发的同时，这次会议的另外一个主要焦点为推广、社群及多元平等。会议由一个小组会议开始
  2015contributors-conference-diversity2: >-
    Diversity: Seven Voices on Race, Gender, Ability &amp; Class for FLOSS and
    the Internet
  2015contributors-conference-diversity3: （多元平等：七个在种族、性别、能力及阶级的声音，给 FLOSS（免费与开源软件）及互联网）。
  2015contributors-conference-diversity4: 举办者为
  2015contributors-conference-diversity5: 及
  2015contributors-conference-diversity6: ，
  2015contributors-conference-diversity7: >-
    该小组会议发生于2015年5月25日（星期二），地点在 Carnegie Mellon University 的 Kresge
    Auditorium。演说者包括
  2015contributors-conference-diversity8: 及
  2015contributors-conference-diversity9: 。
  2015cc_1: 来自不同背景的参与者微笑着并用他们的双手做一个代表 p5 的标志
  2015cc_2: 参与者们在草坪上跳跃、微笑以及高举双手
  2015cc_3: 一位女士使用她的手提电脑呈现 p5.js 社群宣言
  2015cc_4: 一位女士有声有色的对着一个麦克风演说，同时两位男性合作者在旁观
  2015cc_5: 参与者们专注地对着课室前方微笑
  2015cc_6: 一位女士使用麦克风对着三位女性学生阅读关于 p5.js 的资料
  2015cc_7: 参与者们围着一个贴了多个便利贴的白板而坐，同时一位女性学生对着一个麦克风进行演说
  2015cc_8: 参与者们围着一张桌子坐着并看着对方的手提电脑，对比代码
  2015cc_9: 贴着不同颜色便利贴的白板，便利贴上写着关于编程的笔记
  2015cc_10: 一位女士对着麦克风演说着关于重视不同的技能，同时一群使用着手提电脑的参与者在一个课室内观看她的幻灯片
  2015cc_11: 一位女士在一个讲堂内的讲台上演说，同时三位参与者坐在舞台上而另三位参与者使用视屏通话呈现在舞台幕布上
  2015cc_12: 参与者在课室内使用他们的手提电脑工作的顶视图
  2015cc_13: 五个人围着圈子进行讨论
  2015cc_14: 五个人围着圈子并使用他们的手提电脑交换笔记
  2015cc_15: 在课室内的一位男士使用麦克风对着一群参与者进行演说
  2019contributors-conference-title: 贡献者会议 2019
  2019contributors-conference-date: 8月13日至18日
  2019contributors-conference1: '一群35位来自不同身份背景的参与者聚集在 '
  2019contributors-conference2: ' 以进展源代码、参考文献及社群扩展工具并同时探索现时 p5.js 编程环境的状况。这次的会议专注于通过多学科的角度促进对话，并包括了来自各种不同身份背景的参与者所代表，其中有来自创意科技、互动设计及新媒体艺术的参与者。参与者被分成多个工作小组，其主题为：辅助、表演内的音乐及代码、创意科技景观及国际化。'
  2019contributors-conference3: 视屏由 Qianqian Ye 所制作
  2019contributors-conference4: 摄影师为 Jacquelyn Johnson
  outputs: 成果
  output1: 。一个高度灵活的三角形、正方形、六边形及八边形格框 p5.js 附加程式库。作者为 Aren Davey。
  output2: 。一系列用于制作多设备、多人游戏的模版文件，多个客户端可同时连接至同一个服侍页面作者为 L05。
  output3: '使用 '
  output3-1: ' 制作的实验，用于测试 softCompile、OSC 界面功能并在 MIDI 设置演示加入了连接性功能。这是个 p5.js 合作性实时编码视屏骑师环境！作者为 Ted Davis。'
  output4: >-
    一个由 American Artist 带领的小组，主题为 Blackness and Gender in Virtual Space，同时参与者有
    shawné michaelain holloway 及 LaJuné McMillian。
  output5: 由 Everest Pipkin 及 Jon Chambers 带领的研讨会。
  output6: 一个
  output6-1: ' p5.js 笔记界面'
  output6-2: 的样板。作者为 Allison Parrish。
  output7: Stalgia Grigg、LaJuné McMillian、Aatish Bhatia 及 Jon Chambers 所制作的新艺术装置。
  output8: p5.js 全球贡献者工具包。
  output8-1: >-
    作者为 Aarón Montoya-Moraga、Kenneth Lim、Guillermo Montecinos、Qianqian
    Ye、Dorothy R. Santos 及 Yasheng She.
  output9: 如何编写非暴力创意代码。
  output9-1: 一个由 Olivia Ross 所带领的小型杂志。
  output10: >-
    p5.js 网站的整修以加强其可用性。其包括了屏幕阅读其可用性的进展以及改善主页、下载、入门及参考文献页面。贡献者包括 Claire
    Kearney-Volpe、Sina Bahram、Kate Hollenbach、Olivia Ross、Luis
    Morales-Navarro、Lauren McCarthy 及 Evelyn Masso。
  output11: >-
    由 Luisa Pereira、Jun Shern Chan、Shefali Nayak、Sona Lee、Ted Davis 及 Carlos
    Garcia 所带来的合作性表演。
  output12: 由 Natalie Braginsky 所带来的表演。
  output13: p5 编辑器的 p5.js 附加程式库系统设计。作者为 Cassie Tarakajian 及 Luca Damasco。
  output14: 连接 p5 及其他程式库的原型。作者为 Alex Yixuan Xu 及 Lauren Valley。
  output15: 由 Golan Levin 带领的闭幕营火会。
  2019cc_1: 一位男士在大学讲台上向满座的课堂作演讲
  2019cc_2: 参与者们围着长桌一边吃午餐一边进行讨论
  2019cc_3: 参与者们在一个课室内，其中一些在手提电脑上工作，另一些则在交谈
  2019cc_4: 课室内的参与者们在他们的手提电脑上工作
  2019cc_5: 参与者们在一个阴暗的课室内开会
  2019cc_6: 一位女士对着课室内来自不同背景的参与者们演讲
  2019cc_7: 参与者们在一个忙碌的课室内交谈
  2019cc_8: 一位女士使用麦克风对着课室内的参与者们演讲
  2019cc_9: 一位参与者坐在满是关于匿名数据问题的文字投影前，在讲台上演讲
  2019cc_10: 一位拿着麦克风的参与者坐在关于 p5.js 除了能增加易接近性之外的功能不会再添正新功能的文字前，对着其他参与者演讲
  2019cc_11: 一位女士使用麦克风对着其他参与者们演讲
  2019cc_12: 一位男士使用麦克风对着其他参与者们演讲
  2019cc_13: 参与者们坐在课室内专注地在聆听演说
  2019cc_14: 参与者们坐在课室内专注地在聆听演说
  2019cc_15: 一位女士使用麦克风背对着 “sacred boundaries” 文字，对着其他参与者们演讲
  2019cc_16: 俯视参与者们聆听着坐在一个 3D 渲染的人模型前的小组讲坛
  2019cc_17: 参与者们围着桌子坐着并在查看一个荧幕上的代码
  2019cc_18: 坐在真人大小的泰迪熊旁边的一位女士在她的手提电脑上工作
  2019cc_19: 站在户外的参与者们微笑着
  2019cc_20: 四位参与者围成一个圈子交谈
  2019cc_21: 参与者们坐在户外一起享用午餐
  2019cc_22: 参与者们围着一个 U 形的桌子坐着并对着课室的前方
  2019cc_23: 一位男士坐在课室的前方使用麦克风有声有色地进行演讲
  2019cc_24: 参与者们微笑着并举着双手的团体照
  2019cc_25: 一群人围着由四个 LCD 萤幕组成的营火坐着
  p5js-community-event-title: p5.js 社群活动
  2022-p5js-access-day-title: p5.js Access Day 2022
  2022-p5js-access-day-date: 2022年5月21日
  2022-p5js-access-day-organizer: 组织者和策划人
  2022-p5js-access-day-coordinator: 活动协调人和视频制作人
  2022-p5js-access-day-description: >-
    p5.js 访问日是一次虚拟会议，讨论艺术开源软件(OSSTA)中的访问性以及超越软件范畴的更大问题。
    这一天的线上活动包括四个主题会话——关键网络可达性、残疾艺术、访问和社区建设以及翻译访问。 它为 p5.js 贡献者和 OSSTA
    项目之外的经验丰富的从业者提供了空间， 分享他们对于在技术和艺术空间中建立更大访问性的知识、观点和愿景。
  2022-p5js-access-day-recap-video: p5.js 访问日 2022 回顾视频
  2022-p5js-access-day-recap-video-asl: 带有美国手语解释的 p5.js 访问日 2022 回顾视频
  2022-p5js-access-day-moderator: 主持人
  2022-p5js-access-day-speakers: 发言人
  2022-p5js-access-day-session-0: 活动开场
  2022-p5js-access-day-session-1: 关键网络可达性
  2022-p5js-access-day-session-2: 残疾艺术
  2022-p5js-access-day-session-3: 访问和社区建设
  2022-p5js-access-day-session-4: 翻译访问
  2022-p5js-access-day-session-5: 活动闭幕
  2022-p5js-access-day-production: 活动制作
  2022-p5js-access-day-advisor: 活动顾问
  2022-p5js-access-day-asl: 同声美国手语传译
  2022-p5js-access-day-designer: 平面设计师
  2022-p5js-access-day-tech-support: 现场活动技术支持
  2022-p5js-access-day-transcriber: 关闭字幕转录支持
  2022-p5js-access-day-asl-support: 现场美国手语支持
books:
  books-title: 书籍
  book-1-title: Getting Started with p5.js
  book-1-authors: 'Lauren McCarthy, Casey Reas 和 Ben Fry，插图由 Taeyoon Choi 制作。'
  book-1-publisher: 2015 年 10 月出版，Maker Media。
  book-1-pages: 246 页。
  book-1-type: 平装本。
  book-1-description: 由 p5.js 主要开发人员和 Processing 创始人撰写的本书，介绍了在今天的Web中，使用JavaScript和HTML探索创造性的可能性。
  book-1-order-a: 从 O'Reilly 订购平装本/电子书
  book-1-order-b: 从 Amazon 订购
  book-2-title: p5.js 入门（西班牙语版）
  book-2-authors: >-
    Lauren McCarthy、Casey Reas 和 Ben Fry，由 Aarón Montoya-Moraga 翻译， 插图由 Taeyoon
    Choi 制作。
  book-2-publisher: '2018 年出版，Processing Foundation, Inc.。'
  book-2-pages: 246 页。
  book-2-type: 平装本。
  book-2-description: 由 p5.js 主要开发人员和 Processing 创始人撰写的本书，介绍了在今天的Web中，使用JavaScript和HTML探索创造性的可能性。
  book-2-order-a: 从 Processing Foundation Press 订购 PDF
  book-2-order-b: 从 Amazon 订购物理版本
  book-3-title: Generative Design
  book-3-authors: Benedikt Gross、Hartmut Bohnacker、Julia Laub 和 Claudius Lazzeroni。
  book-3-publisher: 2018 年 10 月 30 日出版，普林斯顿建筑出版社；再版。
  book-3-pages: 255 页。
  book-3-type: 平装本。
  book-3-description: >-
    通过使用像 p5.js 中的 JavaScript 这样的简单语言， 艺术家和制作者可以创建从交互式排版和纺织品到 3D
    打印的家具，以及复杂而优美的信息图表。
  book-3-order-a: 从 Princeton Architectural Press 订购
  book-3-order-b: 从 Amazon 订购
  book-4-title: Generative Gestaltung（德语版）
  book-4-authors: Benedikt Gross、Hartmut Bohnacker、Julia Laub 和 Claudius Lazzeroni。
  book-4-publisher: 2018年3月1日出版，Schmidt Hermann Verlag。
  book-4-pages: 256页。
  book-4-type: 精装本。
  book-4-description: >-
    通过使用像 p5.js 中的 JavaScript 这样的简单语言， 艺术家和制作者可以创建从交互式排版和纺织品到 3D
    打印的家具，以及复杂而优美的信息图表。
  book-4-order-a: 在Verlag Hermann Schmidt订购
  book-4-order-b: 在Amazon订购
  book-5-title: 用p5.js学习JavaScript
  book-5-authors: Engin Arslan。
  book-5-publisher: 2018年出版，Apress发行。
  book-5-pages: 217页。
  book-5-type: 平装本。
  book-5-description: >-
    以极具吸引力和视觉冲击力的方式，使用广受欢迎的JavaScript和程序库p5.js从零开始学习编程。
    从本书中获得的技能对于各行各业都具有高度的可转移性，并可用于构建Web应用程序、 可编程机器人或生成艺术。
  book-5-order-a: 从Apress订购
  book-5-order-b: 从Amazon订购
  book-6-title: “美学编程：软件研究手册”
  book-6-authors: Winnie Soon、Geoff Cox。
  book-6-publisher: 2020年出版，Open Humanities Press发行。
  book-6-pages: 298页。
  book-6-type: 精装本。
  book-6-description: 本书使用p5.js介绍并演示了美学编程的自反实践，采用学习编程的方式来理解和质疑现有技术对象和范例， 并探索重新编程更广泛的生态-社会-技术系统的潜力。
  book-6-order-a: PDF下载（免费）
  book-6-order-b: 在Barnes & Noble订购
examples:
  Examples: 范例
  back-examples: 返回
  Structure: 结构
  Form: 形状
  Data: 资料
  Arrays: 数组
  Control: 控制
  Image: 图像
  Color: 颜色
  Math: 数学
  Simulate: 模拟
  Interaction: 互动
  Objects: 物件
  Lights: 灯光
  Motion: Motion
  Instance_Mode: 实例模式
  Dom: DOM
  Drawing: Drawing
  Transform: 变换
  Typography: Typography
  3D: 3D
  Input: Input
  Advanced_Data: Advanced Data
  Sound: 音频
  Mobile: 移动设备
  Hello_P5: Hello p5
reference:
  Reference: 参考文献
showcase:
  showcase-title: Showcase
  showcase-intro1: 这是p5.js展示区，由
  showcase-intro2: 在2019年建立，目前由
  showcase-intro3: >-
    策划。我们在展示人们如何使用p5.js使创意工作，学习和开源变得更加有趣和包容。我们在一起，共同建立社区。在2019年夏季，我们邀请了一些创作者来分享更多有关他们如何通过不同项目和作品使用p5.js。
  showcase-intro4: 2020年夏季展示区现已开始接受报名，提名某人的p5.js作品或您自己的作品在这里进行展示!
  nominate-project: 提名作品
  showcase-featuring: 特别推荐
  project-tag-art: 艺术
  project-tag-design: 设计
  project-tag-code: 编程
  project-tag-curriculum: 课程
  project-tag-documentation: 文档
  project-tag-game: 游戏
  project-tag-library: 库
  project-tag-organizing: 组织
  project-tag-tool: 工具
  project-tag-tutorial: 教程
  project-roni: 程序化画笔绘画
  credit-roni: Roni Cantor
  description-roni: 使用p5.js生成正弦波和Lerp，导出为SVG并用画笔绘制。
  project-phuong: Airi Flies游戏
  credit-phuong: Phuong Ngo
  description-phuong: 使用p5.play开发的游戏，通过说出“PEW”来帮助Airi飞行。 旨在鼓励人们走出舒适区，无论他们做什么、看起来和听起来如何，都能更自信地面对生活。
  project-daein: Chillin'交互式排版海报
  credit-daein: Dae In Chung
  description-daein: 使用移动设备的动态感应器和p5.js开发的交互式排版海报。
  project-qianqian: Qtv视频频道
  credit-qianqian: Qianqian Ye
  description-qianqian: >-
    一个以普及创意编程、艺术和技术为主题的中文视频频道，包括面向初学者的p5.js教程。
    在YouTube、Instagram、Bilibili和TikTok上可收看。
  project-casey-louise: p5.js着色器
  credit-casey-louise: Casey Conchinha、Louise Lessél
  description-casey-louise: 学习在p5.js中使用着色器的学习资源，包括着色器是什么、为什么以及如何使用。
  project-moon-xin: 活动响应式海报
  credit-moon-xin: Moon Jang、Xin Xin 和学生
  description-moon-xin: 基于浏览器的移动海报，利用图形系统、变换方法和p5.js解决了一个不到8个字母的单词的内涵。 由乔治亚大学的一个平面设计课（视觉叙事系统）的学生设计。
  created-by: 创作者
  pronouns-female: (她/她的)
  creator-from-roni-cantor: 来自加拿大多伦多
  project-links: 项目链接
  project-links-text-1-roni-cantor: 在p5.js Web Editor中的示例代码
  project-links-text-2-roni-cantor: AxiDraw V3演示视频
  project-q-1-1: 你在做什么？
  project-q-1-2: 你是如何开始使用p5.js的？
  project-a-1-1-roni-cantor: 我刚从莱尔森大学的新媒体专业毕业。在进行了4年的编程和机器人制作后， 我决定休息一下，尝试一些更传统的艺术形式 - 同时仍然进行编程和机器人制作。
  project-a-1-2-roni-cantor: 我第一次使用p5.js是在
  project-a-1-3-roni-cantor: ！使用
  project-a-1-4-roni-cantor: 多年后，我想尝试一些新的东西。
  project-q-2: 你是如何在这个项目中使用p5.js的？
  project-a-2-1-roni-cantor: 我在这个项目中使用p5.js生成正弦波和Lerp（线性插值）公式，并在
  project-a-2-2-roni-cantor: 中显示可视化效果。然后，我使用我的代码中的一个功能将可编程图形导出为
  project-a-2-3-roni-cantor: ' 文件。我需要一个SVG文件来提供给绘图仪器，'
  project-a-2-4-roni-cantor: ''''' - 以便它知道如何绘制我编程的线条。我使用了名为'''
  project-a-2-5-roni-cantor: ' 的程序将此信息发送到绘图仪器！'
  project-q-3: 你最喜欢 p5.js 的哪个功能？
  project-a-3-roni-cantor: ' 因为线条很有趣，而“lerp”是一个有趣的词！'
  project-q-4: 你在处理这个项目时面临了什么挑战？如果有，你是如何克服他们的？
  project-a-4-roni-cantor: 是我第一次使用p5.js、Inkscape和绘图仪！我真的受益于身边的人们以前使用过p5，以及在线指南和论坛。
  project-q-5: 有什么很酷的东西我们应该看看吗？
  project-a-5-roni-cantor: ' 在 Instagram 上 - 超酷的模拟绘图仪。'
  project-q-6: 人们在哪里可以了解更多关于你的信息？
  project-a-6-roni-cantor: ' (Instagram)'
  project-resources: 项目资源
  creator-from-qianqian: 加利福尼亚洛杉矶
  interview-link-qianqian: Processing Foundation 对 Qianqian Ye 的采访
  project-a-1-1-qianqian: 我是一位居住在洛杉矶的中国艺术家和设计师。
  project-a-1-2-qianqian: 我的伴侣向我介绍了p5.js，我主要通过观看免费的在线视频教程来学习。 我的第一个p5.js项目是用不同的颜色绘制一些形状。
  project-a-2-1-qianqian: >-
    这个项目的起始点是想教我住在中国、不会说英语的母亲如何使用p5.js进行编程。
    这个项目存在多个难点，我首先要确定的是一个人如我母亲这样的人更难学会编程的主要原因——主要是由于缺乏自由的创意编程教育资源。
    学习创意编程的大部分免费资源在中国不可用。 由于互联网审查的原因，YouTube上的p5.js教程以及p5.js
    Twitter和Instagram帐户在中国不可访问。
  project-a-2-2-qianqian: 我从视频教程中学到了很多，比如
  project-a-2-3-qianqian: >-
    '，但是越是观看在线编程教程，我越认识到在普通话教授编程是多么困难， 尤其是在其他女性和有色人种中没有人可以提供普通话教学的情况下。
    我希望帮助其他中国女性与创意编程相关。'
  project-a-2-4-qianqian: >-
    我正在努力开放视频频道，让其他有兴趣一起为教育资源做出贡献的中国创意人参与其中，例如采访和嘉宾教程。
    如果你有兴趣使用普通话进行创意编程教学/演讲，请联系我！
  project-a-3-1-qianqian: 我最喜欢的p5.js功能是
  project-a-3-2-qianqian: ，它可以使基于web的创意编程无缝进行。
  project-a-4-1-qianqian: >-
    用第二种语言来学习编程是很困难的，缺乏社区也让这个过程变得更加困难。
    我希望能够从一个初学者的角度和一个曾经感到自己是个局外人的人的经验来分享创意编程和视频教程的世界。
  project-a-4-2-qianqian: >-
    我花了很多时间研究我的视频。最后，我决定使用我的手机来录制视频，使用iMovie进行编辑。我希望鼓励其他人，不需要花费大量昂贵的装备就能开始制作教学视频。
  project-a-4-3-qianqian: >-
    我遇到的另一个问题是我对把自己放在网上的恐惧。 我首先必须克服在视频中犯错误或在网上收到负面评论的焦虑。 女性和有色人种通常是在线骚扰的目标。
    我希望为其他女性和有色人种树立榜样，告诉她们把自己放在网上是可以的，通过分享知识来加强社区。 通过创造强大的多元化社区，最终我们将能够制止在线骚扰。
  project-a-5-1-qianqian: 我非常兴奋地看到
  project-a-5-2-qianqian: 在洛杉矶。
  creator-from-phuong: 'From Kyiv, Ukraine'
  project-a-1-1-phuong: 我是一名创意码农和设计师，
  link-1-phuong: 玩Airiflies！
  link-2-phuong: 在GitHub上为AiriFlies编写的代码
  link-3-phuong: 更多信息在Phuong Ngo的组合中
  project-a-1-2-phuong: 获得多样性奖学金，只是一个好奇的生物。
  project-a-1-3-phuong: 我在柏林的机器学校参加了一个课程，名为“Processing +p5.play a
  project-a-1-4-phuong: 主要由
  project-a-2-1-phuong: 我使用p5.js在游戏的可视部分工作。Airi和幽灵的动画精灵是在iPad应用'
  project-a-2-2-phuong: 上绘制的，然后集成到
  project-a-2-3-phuong: 的代码中。我主要参考p5.play的示例。
  project-a-2-4-phuong: 对于无限滚动背景，我找到了配置
  p5-sketch-by-chjno-phuong: p5 sketch by chjno
  project-a-2-5-phuong: >-
    。我设定了一个条件，当检测到“PEW”或鼠标单击时，滚动速度会改变，产生Airi向上飞行的幻象。当用户不做任何操作时，滚动速度是负的，这使得Airilook像是在下落。
  project-a-2-6-phuong: '对于声音识别，我使用了 '
  project-a-2-7-phuong: ' (目前，有一个 beta 版本，尚未公开发布，但很快就会发布！)。我添加了约 120 个样本，我的同学用不同的声调说出单词 "pew"，还添加了 80 个背景噪声样本来进行训练。然后，我将模型集成到游戏中，使用了 '
  project-a-3-1-phuong: 我真的很喜欢使用 通过它，你可以轻松地创建、操作和删除 HTML 块和类。
  project-a-3-2-phuong: ' 通过 '
  project-a-3-3-phuong: ' 等。但我最喜欢的函数是 '
  project-a-3-4-phuong: ，因为它可以创造神奇的效果。
  project-a-4-1-phuong: 由于p5.js对我来说是新的事物，我面临了很多挑战。我之前没有很多使用 JavaScript 的经验。 阅读文档并搜索类似的示例真的帮了很多忙。
  project-a-5-1-phuong: '看看 '
  school-of-machines-phuong: School of Machines 的课程
  project-a-5-2-phuong: 吧！他们努力连接世界上最有创造力的人，到目前为止做得很好。 ❤️
  pronouns-male: (他/他的)
  creator-from-chung: 来自马里兰州巴尔的摩市
  link-1-casey-louise: p5.js 着色器指南
  link-2-casey-louise: p5.js 着色器示例的 Glitch 集合
  link-1-chung: 查看 Chillin'
  link-2-chung: GitHub 上 Chillin' 的代码
  link-3-chung: 更多信息在 Dae In Chung 的作品集中
  project-a-1-1-chung: 我是一名平面设计师，也是马里兰艺术学院的教员， 其中我主要教授编程（当然包括 p5.js 和 Processing），以及动态图形。
  project-a-1-2-chung: '我已经使用了 '
  project-a-1-3-chung: ' 有一段时间了，当 p5.js 出现时，我毫不犹豫地开始使用它，因为它很容易将现有的 Processing 代码转换为 p5.js，并在线共享项目。'
  project-a-2-1-chung: >-
    今年夏天，我给自己一个挑战，使用编程来制作排版海报，这是其中我制作的一张海报。 直到最近，我不知道我也可以在 p5.js
    中使用运动传感器数据。我也在观看
  dan-shiffman-matterjs-tutorial: Dan Shiffman 的 matter.js 教程视频
  project-a-2-2-chung: ，所以我想为什么不将这两个结合起来，练习我所学的东西呢？
  project-a-3-1-chung: p5.js 有很多我喜欢的东西，比如在线社区和友好的初学者指南。我现在真正喜欢的是
  project-a-3-2-chung: >-
    '，通过使用它，我不仅可以在线上工作，还可以在演示模式下快速共享 URL。 特别是对于这个项目，我不得不在手机上进行大量测试，这比提交到 GitHub
    快得多。'
  project-a-4-1-chung: 在 mode 中，我遇到了一些处理字体、alpha 通道和 z-depth 的困难。
  project-a-4-2-chung: '  我对自己的所有决策仍然不满意。但总的来说，搜索论坛并不要忽略将问题分解成更小的问题，再逐步迭代，这非常有帮助。我还遇到了从 p5.js 直接渲染出视频文件的问题。屏幕录制不是一个选择，因为帧速率间歇性的下降（我的笔记本电脑相当慢）。经过一些研究，我决定学习一些基础的视频编辑知识，'
  project-a-4-3-chung: 为自己构建一个工具。
  project-a-5-1-chung: 如上所述，如果你想从 p5.js 中呈现出帧和视频文件，可以查看我的
  project-a-5-2-chung: ，然后告诉我你的想法。
  creator-from-casey-louise: 来自纽约市，纽约州
  project-a-1-1-casey-louise: Casey：我是纽约大学交互艺术研究生，对计算机图形和交互空间，无论是物理的还是数字的，都很感兴趣。
  project-a-1-2-casey-louise: Louise：我是纽约大学交互艺术研究生，对传感器技术基础上的计算机图形和交互空间，无论是物理的还是数字的，都很感兴趣。
  project-a-1-3-casey-louise: Casey：我在 2018 年开始学习 p5.js，那是我在 ITP 的第一个学期，尽管我一直在涉足 Processing，
  project-a-1-4-casey-louise: ' 并自 2012 年起就在做这件事。我是在学习平面设计时被我的朋友 Pedro 介绍到 Processing 的，这让我印象深刻。我被制作自己的工具来创建图形和交互艺术的想法吸引住了，但一旦我真正尝试后，我就爱上了它。我记得我做过的第一个项目是一个会跟随你屏幕上所有动作的眼睛，如果你不理它，它就会很沮丧。'
  project-a-1-5-casey-louise: Louise：我最初学习 p5.js 是为了使我正在创建的网站更加有趣。 我是一名C#程序员，因此这对我来说是进入JavaScript的良好开端。
  project-a-2-1-casey-louise: Casey：我一直在推迟学着色器，在 ITP，我听说过一个针对开源、叙事和学习资源项目的资助项目。
  project-a-2-2-casey-louise: >-
    因为我在 p5.js + 着色器文档方面找不到太多资源，所以我决定找出它们在 p5.js 中的实现， 并创建一个资源供他人学习。当我告诉 Louise
    这个项目时，她立即对学习和教授 p5.js 着色器感到兴奋。 她确保这个项目是一个学习资源，而不仅仅是一个示例集合。
  project-a-3-1-casey-louise: Casey：这算作一个功能吗？我也喜欢可以在网上分享我的程序，这样人们就不需要安装特别的软件或者来到纽约就能看到我的作品。
  project-a-3-2-casey-louise: 我特别喜欢推出的功能，以及对坐标系统的转换功能，可以生成视觉效果。
  project-a-3-3-casey-louise: 'Louise: 我最喜欢的功能是 '
  project-a-3-4-casey-louise: “和 ”
  project-a-3-5-casey-louise: “因为可以通过坐标系统的变换生成视觉效果。”
  project-a-4-1-casey-louise: “Casey：项目开始的阶段是我们通过向一些厉害的人提出问题，寻求许可来使用他们在我们项目中的例子。”
  adam-ferris-repo-casey-louise: “Adam Ferriss的GitHub存储库”
  project-a-4-2-casey-louise: “确实为我们提供了在p5.js中理解着色器是如何工作，并提供了一些可入门的示例框架。针对我们在使用p5.js时遇到的特定问题，我们向 ”
  project-a-4-3-casey-louise: “和 ”
  project-a-4-4-casey-louise: “（他们参与了”
  webgl-casey-louise: “ 在p5.js中的实现”
  project-a-4-5-casey-louise: “），他们给了我们很大的帮助。”
  project-a-4-6-casey-louise: >-
    "Louise: 将着色器引入p5的学习曲线相当陡峭。幸运的是，Adam Ferriss在GitHub上提供了一些非常详细的示例。
    我们旨在以一个完全的初学者都能理解如何实现的方式来实现它， 因此，这不仅是一个技术上的挑战，也是传授代码给陌生人和初学者的挑战。在这里，我们借鉴了”
  openframeworks-book-casey-louise: “openFrameworks书籍”
  project-a-4-7-casey-louise: “的写作方式。我们坚信，这种有趣的“嘿，这并不难，你也可以做到”的方法。”
  project-a-5-1-casey-louise: “请查看”
  project-a-5-2-casey-louise: “以查看我们同行的精彩资助项目！”
  pronouns-nonbinary: “他们/他们”
  creator-from-moon: “来自乔治亚州的雅典”
  posters-by: “海报作者”
  project-a-1-1-moon: >-
    “Moon: 我是一名平面设计师，视觉艺术家和设计教育工作者。
    这个夏天，我在意大利的乔治亚大学科尔托纳项目中教了一门平面设计课程，介绍了一些p5.js的基础知识。 这个秋天，我计划在UGA教授和研究数字平台。”
  project-a-1-2-moon: “我的前同事，”
  project-a-1-3-moon: “邀请我在”
  project-a-1-4-moon: “在2019年1月的洛杉矶”
  pcd-la-moon: “。他们帮助我了解了p5.js的工具和逻辑。这是一次绝佳的教学和学习经验。”
  project-a-1-5-moon: >-
    . They helped me with the tools and logics of p5.js. It was an excellent
    teaching and learning experience.
  project-a-2-1-moon: “我们遵循了基本的教程，”
  codetrain-moon: “Daniel在YouTube上的视频”
  project-a-2-2-moon: “以及”
  p5-reference-moon: “p5.js网站上的参考文献。”
  project-a-2-3-moon: “”
  project-a-3-1-moon: “我最喜欢的功能与”
  project-a-3-2-moon: '有关: '
  project-a-3-3-moon: “”
  project-a-3-4-moon: “我能够使用它并将其教给别人，以可视化关于时间运动的各种想法。”
  project-a-4-1-moon: >-
    “对于我这样一个初学者来说，理解p5.js的整体结构以及代码的工作方式是一项具有挑战性的任务。我不得不重复学习p5.js的基础知识，并绘制了一张图表来记忆和教授我理解p5.js结构和代码的方式。这是一次非常棒的教学和学习经验。”
  project-a-5-1-moon: “请查看”
  project-a-5-2-moon: “以查看在意大利米兰的展览。”
teach:
  teach-title2: 教学
  teach-intro1: 每种教学都有它自己独特的目标、信息、条件和环境。
  teach-intro2: 通过记录和分享 p5 的研讨会、课程和材料，我们希望更好地连接全球的 p5.js 学习者和教育者社区。
  teach-intro3: 分享或推荐
  teach-intro4: 你自己的教学经验！
  teach-heading: p5 教学资源
  teach-search-filter: 搜索过滤
  teach-filter1: '多样性和包容性: '
  teach-filter1-label1: 性别
  teach-filter1-label2: 种族和民族
  teach-filter1-label3: 语言
  teach-filter1-label4: 神经类型
  teach-filter1-label5: 能力
  teach-filter1-label6: 阶级
  teach-filter1-label7: 宗教
  teach-filter1-label8: （子）文化
  teach-filter1-label9: 政治观点
  teach-filter1-label10: 年龄
  teach-filter1-label11: 技能水平
  teach-filter1-label12: 职业
  teach-filter1-label13: '#noCodeSnobs'
  teach-filter1-label14: '#newKidLove'
  teach-filter1-label15: '#unassumeCore'
  teach-filter1-label16: '#BlackLivesMatter'
  teach-filter2: '场馆: '
  teach-filter2-label1: 非洲
  teach-filter2-label2: 亚洲
  teach-filter2-label3: 欧洲
  teach-filter2-label4: 北美洲
  teach-filter2-label5: 大洋洲
  teach-filter2-label6: 南美洲
  teach-filter2-label7: 虚拟-在线
  teach-filter3: '年份: '
  teach-filter4: '难度级别: '
  teach-filter4-label1: 初级
  teach-filter4-label2: 中级
  teach-filter4-label3: 高级
  teach-case-subtitle1: 场馆和日期
  teach-case-subtitle2: 参与者
  teach-case-subtitle3: 难度级别
  teach-case-subtitle4: 目标
  teach-case-subtitle5: 方法和材料
  teach-case1-title: 在高中使用 p5.js 介绍视频游戏编程
  teach-case1-lead-name: Emanuele Bolognesi
  teach-case1-image-alt: 一张有 25 名学生和他们的老师的合照
  teach-case1-content1: "\U0001F4CD 意大利 Scandicci 的 High School Russell-Newton。"
  teach-case1-content1-1: '02/06/2022 ~ 04/10/2022, 每周六 10:00-11:00'
  teach-case1-content2: 25 名意大利高中生（15-16 岁）。11 名女生和 14 名男生
  teach-case1-content3: 初级
  teach-case1-content4: 通过使用 JavaScript 和 p5.js，向十年级学生介绍简单的视频游戏编程。
  teach-case1-content5: 方法：p5.js网络编辑器
  teach-case1-content5-1: 学生的
  teach-case1-content5-2: 作
  teach-case1-content5-3: 品
  teach-case2-title: 分形实现
  teach-case2-lead-name: Mariana
  teach-case2-content1: Mars
  teach-case2-content1-1: '2022年2月6日15:00~15:30'
  teach-case2-content2: 15人
  teach-case2-content3: 中级
  teach-case2-content4: 介绍分形主题并使用p5js实现
  teach-case2-content5: '仅有 '
  teach-case3-title: 使用p5.js入门计算媒体
  teach-case3-lead-name: Barry Voeten
  teach-case3-content1: 学校
  teach-case3-content1-1: 整个课程
  teach-case3-content2: 荷兰学校的14-15岁的学生
  teach-case3-content3: 初、中、高级别
  teach-case3-content4: 教育
  teach-case3-content5: 课程大纲
  teach-case4-title: 身体质量指数计算器
  teach-case4-lead-name: Dayana
  teach-case4-content1: Youtube
  teach-case4-content1-1: '00h: 30min'
  teach-case4-content2: “订阅我的YouTube频道的人，有18次浏览。”
  teach-case4-content3: 初级、初学者
  teach-case4-content4: 帮助那些刚开始学习编程的人。
  teach-case4-content5: p5.js Web编辑器，YouTube教程
  teach-case5-title: 创意编程工作坊
  teach-case5-lead-name: Federico Santana
  teach-case5-image-alt: 屏幕截图，教师正在线上p5.js网络编辑器上教学
  teach-case5-content1: 'https://www.twitch.tv/snowflakeFede'
  teach-case5-content1-1: '每周六19:00-20:30(时区：GMT-3)'
  teach-case5-content2: “只有我，但我喜欢邀请人们一起编程。”
  teach-case5-content3: 初学者
  teach-case5-content4: >-
    帮助更多的人学习关于创意艺术的知识，同时将其引入到数学的世界， 所有的教学都是用西班牙语进行的。这个课程强烈受到"The coding
    train"的启发， 但是将数学和创意艺术结合在了一起。
  teach-case5-content5: 这只是p5js的一些示例集合，包括了我们在课程中实时演示的所有内容。地址：
  teach-case6-title: 50+编程俱乐部：我和家人一起的第一个手绘图案
  teach-case6-lead-name: Inhwa Yeom
  teach-case6-image-alt: 课堂照片
  teach-case6-content1: 亚洲文化中心，韩国光州
  teach-case6-content1-1: '2020年11月27日至12月，每周五、六2:00-4:00'
  teach-case6-content2: 平均年龄为62.54岁的老年人及其所有伴侣。
  teach-case6-content3: 初级
  teach-case6-content4: p5 for 50+旨在提高50岁以上人口的数字素养和权利意识
  teach-case6-content5: p5编辑器、p5for50+网络应用程序、p5js.org、print out of code results
  teach-case7-title: p5js入门
  teach-case7-lead-name: Bérenger Recoules a.k.a b2renger
  teach-case7-image-alt: 示例图片
  teach-case7-content1: 法国南特大西洋设计学院
  teach-case7-content1-1: 从2018年至今
  teach-case7-content2: 南特大西洋设计学院的学生
  teach-case7-content3: 初学者
  teach-case7-content4: 了解p5js及其各种功能（dom、audio、webgl等）
  teach-case7-content5: GitHub自述文件：这是一个法语阅读的文本教程。
  teach-case8-title: 我开始了一个新的课程 -
  teach-case8-lead-name: Brinder Soin
  teach-case8-content1: 新泽西州
  teach-case8-content1-1: 12/28至12/30
  teach-case8-content2: 来自各个学校和地区的7、8和9年级约100名学生。
  teach-case8-content3: 初、中、高级别
  teach-case8-content4: 使儿童在疫情期间保持安全和学习，推广STEM教育
  teach-case8-content5: 教师创建的说明和工作表以及IDE p5 Web编辑器。
  teach-case9-title: 应用于视觉和交互艺术的编程
  teach-case9-lead-name: Sebastián Zavatarelli
  teach-case9-image-alt: 一节Zoom课分享p5.js网络编辑器
  teach-case9-content1: 阿根廷布宜诺斯艾利斯。ZOOM平台
  teach-case9-content1-1: '2020年9月15日10月14日，每周三下午6:30 - 9:00'
  teach-case9-content2: 约10人。大部分为女性。
  teach-case9-content3: 初、中级
  teach-case9-content4: 该课程旨在帮助艺术家使用当前的技术工具来开发他们的作品。 对于那些想通过一个简单、直观、易用且有趣的编程环境学习计算机编程的人也是有帮助的。
  teach-case9-content5: p5.js网络编辑器。在线使用ZOOM平台，并在Moodle平台上上传材料。
  teach-case10-title: 用代码绘画
  teach-case10-lead-name: Andreas Refsgaard
  teach-case10-content1: 丹麦哥本哈根
  teach-case10-content1-1: 2020年2月22日
  teach-case10-content2: 参与者是人们。来自范围广泛的人群。
  teach-case10-content3: 中级
  teach-case10-content4: 介绍p5.js，帮助创意人士、设计师、艺术家和其他不习惯使用代码的人了解p5.js。
  teach-case10-content5: 网站，p5.js编辑器
  teach-case11-title: 人手语编程
  teach-case11-lead-name: Taeyoon Choi
  teach-case11-content1: 美国纽约市BRIC、韩国首尔市博物馆。5次课程，每次23小时。
  teach-case11-content1-1: '5 Sessions, each 2~3 hours'
  teach-case11-content2: 纽约市年龄在10~50岁的聋人和听障学生。
  teach-case11-content3: 初级
  teach-case11-content4: 通过有趣的练习帮助聋人和听障学生学习计算机编程。制作基本编码概念的美国手语教程。
  teach-case11-content5: 我们使用p5.js网络编辑器和网站上的代码示例。 我们还使用骰子、纸牌和各种纸质工具来帮助学生了解编码概念。
  teach-case12-title: 数字编织和物理计算工作坊系列
  teach-case12-lead-name: Qianqian Ye
  teach-case12-image-alt: 课堂照片
  teach-case12-content1: 女性创意工作中心，洛杉矶，CA，美国
  teach-case12-content1-1: 2019年10月19日~11月2日，每周六下午3-6点
  teach-case12-content2: 15名女性和非二元艺术家、设计师、制作者、程序员。
  teach-case12-content3: 初级
  teach-case12-content4: >-
    在三个工作坊的过程中，我们将使用开源的图形库p5.js来绘制和创建模式； 我们将学习并应用计算概念来转换模式；
    最后，我们将使用电子微控制器将编织物带给生活。
  teach-case12-content5: 材料：幻灯片，p5.js网络编辑器，笔和纸画图案、 物理图案编织工具的小组会议方法
  teach-case12-content5-1: 我们用于工作坊的幻灯片：
  teach-case13-title: p5.js à l'Ubuntu Party!
  teach-case13-lead-name: Basile Pesin
  teach-case13-content1: 2020年Ubuntu派对
  teach-case13-content1-1: 巴黎科学工业城，法国
  teach-case13-content2: 任何年龄，包括儿童和父母、年轻和年长的成年人。
  teach-case13-content3: 中高级
  teach-case13-content4: 通过有趣和引人注目的示例，向新公众介绍编程。
  teach-case13-content5: 方法：现场工作坊，每次1小时，使用不同的参与者。 学生们使用(Ubuntu)机器与p5.js网络编辑器一起学习。 我使用视频投影机和白板教学。
  teach-case13-content5-1: '''材料：我给出的练习可以通过p5.js网络编辑器链接获得。'''
  teach-case14-title: 用p5.js探索生成艺术和设计
  teach-case14-lead-name: Priti Pandurangan & Ajith Ranka
  teach-case14-image-alt: 一组参与者合作使用p5.js网络编辑器在笔记本电脑上创建一些设计。
  teach-case14-content1: 印度国家设计研究院，班加罗尔
  teach-case14-content1-1: '2020年2月8日，下午2:30-4:00'
  teach-case14-content2: 我们的参与者包括艺术/设计学生和专业人士、创意编程爱好者。我们有近50名参与者。
  teach-case14-content3: Priti：中级；Ajith：高级
  teach-case14-content4: 探索生成艺术和设计，并使用p5.js重新创建一些经典作品。
  teach-case14-content5: 方法：现场协作、实践工作坊。
  teach-case14-content5-1: 材料：
  teach-case14-content5-2: 课程页面链接到p5编辑器中的草图，
  teach-case14-content5-3: 交互式参考指南
  teach-case14-content5-4: 到p5基础知识
  teach-case14-content5-5: to p5 basics
  teach-case15-title: 创意编程节（CC Fest）
  teach-case15-lead-name: Saber
  teach-case15-speech: ‘热爱p5.js。它对我、我的学生和这个社区意义重大。’
  teach-case15-content1: 纽约，洛杉矶，旧金山，虚拟-线上
  teach-case15-content1-1: 每年两次在纽约进行了四年；每年在洛杉矶进行了三年；每年在旧金山进行了两年；现在是虚拟的
  teach-case15-content2: 我们的参与者包括艺术/设计学生和专业人士、创意编程爱好者。我们有近50名参与者。
  teach-case15-content3: 中级
  teach-case15-content4: 围绕中学和高中使用p5来建立教师和学生社区。
  teach-case15-content5: 由志愿教师领导的半天工作坊。我们看到了许多不同的方法和材料。 大多数使用了某种幻灯片或文档，有些使用编辑器进行动态编码，参与者有工作时间进行重新混合。
  teach-case15-content5-1: 创意编程节课程页面
  teach-case15-content5-2: ，提供教学材料。
  teach-case15-content5-3: 更多照片
  teach-case16-title: p5.js创意编程入门工作坊
  teach-case16-lead-name: Aarón Montoya-Moraga
  teach-case16-image-alt: 一组20个人坐在一个共享的大桌子上，看着一个投影屏幕上的内容。
  teach-case16-speech: ‘p5.js是我的快乐之处。’
  teach-case16-content1: PlusCode媒体艺术节，布宜诺斯艾利斯，阿根廷和虚拟-线上
  teach-case16-content1-1: 2018年11月14日，3小时
  teach-case16-content2: 我的工作坊有约16名学生，团队包括3名来自PlusCode媒体艺术节的人和一个场馆内的人。
  teach-case16-content3: 初级、中级、高级
  teach-case16-content4: '介绍p5.js入门和图形Web编程及开源艺术，使用西班牙语 :)'
  teach-case16-content5: ‘我使用了此材料在GitHub上的。’
  teach-case16-content5-1: 资源库
  teach-case16-content5-2: ，我们使用了p5.js网络编辑器，进行了三小时的工作坊。
  teach-case16-content5-3: +CODE电子艺术节2018，阿根廷
  teach-case16-content5-4: ，Medium
  teach-case17-title: 创意编程导论
  teach-case17-lead-name: Adam Herst
  teach-case17-speech: 在制定工作坊时，我最大的不确定性是它是在向程序员教授艺术，还是在向艺术家教授编程。
  teach-case17-content1: Inter/Access
  teach-case17-content1-1: （艺术家经营中心），加拿大安大略省多伦多市
  teach-case17-content1-2: 现场进行，远程学习有自主控制工作手册
  teach-case17-content1-3: 2020年2月12日，晚上7点至9点
  teach-case17-content2: 15名艺术家
  teach-case17-content3: 初级
  teach-case17-content4: 介绍p5.js给没有或很少有编程经验的艺术家，并建议一种从模拟实践迁移到数字形式的方法。
  teach-case17-content5: 通过使用p5.js网络编辑器的活动，展示如何将物理图纸转化为数字图纸的印刷工作手册。
  teach-case17-content5-1: 'Processing Community Day 2019:在Inter/Access举办的生成绘图'
  teach-case17-content5-2: 创意编程导论PDF文件
  teach-case17-content5-3: 创意编程导论小册子PDF文件
  teach-case18-title: '创意编程: 2020年开放讲座'
  teach-case18-lead-name: Shunsuke Takawo
  teach-case18-image-alt: 一张图片中放置着一台笔记本电脑，数张纸和五颜六色的笔， 以及两台自动绘画机器，以一个钢笔在纸上画画。
  teach-case18-speech: 我喜欢p5.js，因为它非常容易在p5.js中阅读和编写代码。在日常生活中进行编码！
  teach-case18-content1: 日本京都艺术与设计大学与虚拟联合举办
  teach-case18-content1-1: 2020年3月16日至18日，下午1-7点
  teach-case18-content2: 京都艺术与设计大学的学生，任何人
  teach-case18-content3: 初级
  teach-case18-content4: 通过编程表达出艺术想法
  teach-case18-content5: Dropbox Paper，p5.js网络编辑器。
  teach-case18-content5-1: 课程大纲
  teach-case18-content5-2: 第一天
  teach-case18-content5-3: 第二天
  teach-case18-content5-4: 第三天
  teach-case18-content5-5: YouTube
  teach-case19-title: 创意编码静态图形
  teach-case19-lead-name: Shunsuke Takawo
  teach-case19-speech: 在p5.js中进行编码非常有趣。如果你还没有尝试过，我鼓励你试一试！
  teach-case19-content1: 日本东京的FabCafe MTRL
  teach-case19-content1-1: 2019年9月15日，下午4点至7点
  teach-case19-content2: 任何想尝试p5.js编码的人
  teach-case19-content3: 中级
  teach-case19-content4: 从图形设计的角度进行编码
  teach-case19-content5: Dropbox Paper，p5.js网络编辑器。
  teach-case19-content5-1: 课程大纲和材料
  teach-case20-title: 生成式排版
  teach-case20-lead-name: Dae In Chung
  teach-case20-image-alt: 一张黑色背景的图片，显示了字母“b”以5种不同的风格呈现，并提供了各种风格选项的菜单。
  teach-case20-content1: 美国马里兰州巴尔的摩市和虚拟联合
  teach-case20-content1-1: 2019年1月21日至5月8日，每个星期三晚上4点至晚上10点
  teach-case20-content2: 初中级本科生和研究生，他们很少或没有编程经验。
  teach-case20-content3: 初级
  teach-case20-content4: 通过计算机操作实验排版形式和结构。
  teach-case20-content5: 方法：在线/离线讲座和批评。
  teach-case20-content5-1: 材料：p5js在线编辑器，Github，Youtube教程。
  teach-case20-content5-2: 参与者的作品
  teach-case21-title: 网络机器学习
  teach-case21-lead-name: Yining Shi
  teach-case21-image-alt: 一组16个人围在桌子旁，拿着笔记本电脑、手机和一些其他配件，朝着一台大电视屏幕。
  teach-case21-content1: '纽约市布鲁克林区杰伊TP，纽约大学。地址：370 Jay St, Brooklyn, NY 11201, USA'
  teach-case21-content1-1: '2019年3月9日至10月12日，每周二晚上6:30-9:00'
  teach-case21-content2: 纽约大学交互式电信计划（ITP）的学生。16人。
  teach-case21-content3: 初级、中级
  teach-case21-content4: 本课程的目标是学习和理解常见的机器学习技术，并应用这些技术在浏览器中使用ml5.js和p5.js生成创意输出。
  teach-case21-content5: 本课程是讲座、编程会议、小组讨论和演示的混合体。我使用
  teach-case21-content5-1: GitHub
  teach-case21-content5-2: ：用于托管课程大纲和所有编程材料。Google幻灯片用于讲座，p5.js网络编辑器用于现场编程会议。
  teach-case21-content5-3: 方法：在线/离线讲座和批评。
  teach-case22-title: p5.js和JavaScript入门
  teach-case22-lead-name: Nico Reski
  teach-case22-content1: 目前可供个人在自己的节奏下学习，附有幻灯片，如下链接。
  teach-case22-content3: 初学者，初级
  teach-case22-content4: 向学习者介绍p5.js（和JavaScript）的最基础知识，以鼓励创意编程并让他们在安全环境中追求自己的项目。
  teach-case22-content5: >-
    p5.js源代码（用于介绍性项目），JavaScript源代码（说明一些基本的JavaScript功能），
    附带的.pdf格式幻灯片，所有这些都公开托管在GitHub上。
  teach-case22-content5-1: 概述
  teach-case22-content5-2: 以及工作坊和其中的内容（包括托管在 GitHub 上的所有链接）在我的学术网页上。
  teach-case23-title: 数字编织与物理计算工作坊系列
  teach-case23-lead-name: Qianqian Ye 和伊夫林·马索
  teach-case23-image-alt: >-
    这张图片分为两个部分。图片左边显示一个由15位女性坐在椅子上， 拿着电脑并聚精会神地看着一个展示者在投影屏幕上解释代码的场面。
    图片右边显示一位人使用物理模式和编织工具学习编织。
  teach-case23-content1: 创意工作女性中心（WCCW），洛杉矶，加利福尼亚州，美国
  teach-case23-content1-1: 2019年10月19日至11月2日，每个星期六下午3-6点
  teach-case23-content2: 15名女性和非二元性别的艺术家、设计师、制作者和程序员。
  teach-case23-content3: 初级
  teach-case23-content4: >-
    在三个工作坊的过程中，我们将使用 p5.js，一个开源的图形库来绘制和创建图案；
    我们将学习和应用计算概念来转换图案，最后，我们将用电子微控制器将编织物生动起来。
  teach-case23-content5: 方法：小组讨论
  teach-case23-content5-1: 材料：幻灯片，p5.js 网络编辑器，纸笔绘制图案，物理模式编织工具。
  teach-case23-content5-2: '工作坊幻灯片 #1'
  teach-case23-content5-3: '工作坊幻灯片 #2'
  teach-case23-content5-4: 工作坊信息
  teach-case23-content5-5: 在 WCCW 网站上。
  teach-case24-title: 手语编程
  teach-case24-lead-name: 崔泰勇
  teach-case24-image-alt: 两名志愿者利用白板和屏幕向一群聋人和听力有障碍的学生讲解概念，每名学生都朝着一台电脑屏幕。
  teach-case24-speech: >-
    我正在为韩国的残障学生准备一系列新的编码课程。我正在研究教学方法和翻译。
    我计划在2020年12月举办工作坊。该项目得到了开放社会基金会人权倡导组织和韩国残障艺术文化中心的支持。
  teach-case24-content1: WRIC，纽约市，美国和首尔美术馆，韩国首尔。
  teach-case24-content1-1: 共5节课，每节课23小时
  teach-case24-content2: 年龄在1050岁之间，生活在纽约市的聋人和听力有障碍的学生。
  teach-case24-content3: 初级
  teach-case24-content4: 帮助聋人和听力障碍的学生通过有趣的练习学习计算机编程。制作基本编程概念的ASL教程。
  teach-case24-content5: 我们使用 p5.js 网络编辑器和网站上的代码示例。 我们还使用了骰子、扑克牌和各种纸制工具来帮助学生学习编程概念。
  teach-case24-content5-1: 教学大纲和材料
  teach-case24-content5-2: 更多照片
  teach-workshops-heading: 即将举行的工作坊
  teach-workshop1-title: CC Fest（创意编码节）
  teach-workshop1-time: 每年在纽约市举行两次
  teach-workshop2-title: 快乐猫节
  teach-workshop2-time: 2023年3月，每个星期六下午2-6点
  teach-workshop3-title: 快乐狗节
  teach-workshop3-time: 2023年5月，每个星期日下午5-8点
