/*
  * @name घुमाएँ
  * @description Z अक्ष के चारों ओर एक वर्ग को घुमाते हुए।
  * अपेक्षित परिणाम प्राप्त करने के लिए, रोटेट फंक्शन एंगल भेजें
  * पैरामीटर जो 0 और PI*2 के बीच के मान हैं (TWO_PI जो है
  * मोटे तौर पर 6.28)। यदि आप कोणों को डिग्री के रूप में सोचना पसंद करते हैं
  * (0-360), आप अपने मूल्यों को परिवर्तित करने के लिए radians() विधि का उपयोग कर सकते हैं।
  * उदाहरण के लिए: घुमाएं (radians(90)) कथन के समान है
  * घुमाएँ (पीआई / 2)। इस उदाहरण में, प्रत्येक सम संख्या वाला दूसरा एक जिटर
  * रोटेशन में जोड़ा जाता है। विषम सेकंड के दौरान, घुमाव CW को गति देता है और
  * सीसीडब्ल्यू अंतिम जिटर मूल्य द्वारा निर्धारित गति पर।
  */

let angle = 0.0;
let jitter = 0.0;

function setup() {
  createCanvas(720, 400);
  noStroke();
  fill(255);
   // केंद्र से आयत बनाएं और यह भी होगा
   // उस केंद्र के चारों ओर घुमाएं
  rectMode(CENTER);
}

function draw() {
  background(51);

  // सम-संख्या वाले सेकंड (0, 2, 4, 6...) के दौरान घबराना जोड़ें
   // रोटेशन
  if (second() % 2 === 0) {
    jitter = random(-0.1, 0.1);
  }
  // सबसे हालिया जिटर वैल्यू का उपयोग करके कोण मान बढ़ाएं
  angle = angle + jitter;
  // घबराहट न होने पर एक सहज CW और CCW गति प्राप्त करने के लिए कोसाइन का उपयोग करें
  let c = cos(angle);
  // आकार को कैनवास के केंद्र में ले जाएं
  translate(width / 2, height / 2);
  // अंतिम रोटेशन लागू करें
  rotate(c);
  rect(0, 0, 180, 180);
}
