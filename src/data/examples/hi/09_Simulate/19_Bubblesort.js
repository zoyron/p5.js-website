/*
  * @name बबल सॉर्ट
  * @description बेतरतीब ढंग से वितरित बार को क्रमबद्ध करता है
  *ऊंचाई के अनुसार आरोही क्रम में
  * पूरी छँटाई प्रक्रिया का अनुकरण करते हुए।
  * द कोडिंग ट्रेन द्वारा कोडिंग चैलेंज से संदर्भ लिया।
  */

let values = [];
let i = 0;
let j = 0;

// सेटअप () फ़ंक्शन में बयान
// प्रोग्राम शुरू होने पर एक बार निष्पादित करें
// सरणी सेटअप () फ़ंक्शन में यादृच्छिक मानों से भरी हुई है।
function setup() {
  createCanvas(720, 400);
  for(let i = 0;i<width/8;i++){
    values.push(random(height));
  }
}

// ड्रा () फ़ंक्शन में स्टेटमेंट तब तक निष्पादित होते हैं जब तक
// प्रोग्राम बंद कर दिया गया है। प्रत्येक कथन को निष्पादित किया जाता है
// अनुक्रम और अंतिम पंक्ति पढ़ने के बाद, पहला
// लाइन को फिर से निष्पादित किया जाता है।
function draw() {
  background(220);
  bubbleSort();
  simulateSorting();
}

// बबलसॉर्ट () फ़ंक्शन सरणी के 8 तत्वों को लेता है
// प्रति फ्रेम। इस फ़ंक्शन के पीछे एल्गोरिथम है
// बुलबुले की तरह।
function bubbleSort() {
  for(let k = 0;k<8;k++){
    if(i<values.length){
      let temp = values[j];
      if(values[j] > values[j+1]){
        values[j] = values[j+1];
        values[j+1] = temp;
      }
      j++;
      
      if(j>=values.length-i-1){
        j = 0;
        i++;
      }
    }
    else{
      noLoop();
    }
  }
}

// सिम्युलेटसॉर्टिंग () फ़ंक्शन एनिमेट करने में मदद करता है
// पूरे बबल सॉर्ट एल्गोरिथ्म
// मानों का उपयोग करके आयतों को खींचकर
// सरणी में आयत की लंबाई के रूप में।
function simulateSorting(){
  for(let i = 0;i<values.length;i++){
    stroke(100, 143, 143);
     fill(50);
     rect(i*8 , height, 8, -values[i],20);
   }
}