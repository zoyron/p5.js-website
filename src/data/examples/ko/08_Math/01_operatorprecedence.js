/*
 * @name 연산자 우선 순위
 * @description 연산자의 실행 순서를 명시하는 경우를 제외하고, 모든 선언문은 연산자 우선 순위에 따라
 * 처리됩니다. 예를 들어, 수식 "4+2*8"는 2에 8을 먼저 곱하고, 그 결과값에 4를 더합니다.
 * 이는 "*"이 "+"보다 연산 우선 순위를 갖기 때문입니다.
 * 혼동을 방지하기 위해 "4+(2*8)"라 쓰는 편을 권장하기도 합니다.
 * 이처럼, 코드 내에 괄호를 사용하여 처리 순서를 명시할 수 있습니다.
 * 연산자 우선 순위는 다음과 같습니다.
 */
// 처리 순위가 높은 연산자는 목록 상단에, 
// 가장 낲은 연산자는 목록 하단에 적힙니다.
// 곱하기 연산자: * / %
// 증감 연산자: + -
// 비교 연산자: < > <= >=
// 등호 연산자: == !=
// 논리 연산자 AND: &&
// 논리 연산자 OR: ||
// 할당 연산자: = += -= *= /= %=
function setup() {
  createCanvas(710, 400);
  background(51);
  noFill();
  stroke(51);

  stroke(204);
  for (let i = 0; i < width - 20; i += 4) {
    // 70이 30을 더한 결과값이
    // 현재 "i"값보다 큰 지의 여부를 평가
    // 처리 순서를 명확히하고자 "if (i > (30 + 70)) {"로 작성
    if (i > 30 + 70) {
      line(i, 0, i, 50);
    }
  }

  stroke(255);
  // 2와 8을 곱한 뒤, 그 결과값에 4를 더함
  // 처리 순서를 명확히하고자, "rect(5 + (2 * 8), 0, 90, 20);"로 작성
  rect(4 + 2 * 8, 52, 290, 48);
  rect((4 + 2) * 8, 100, 290, 49);

  stroke(153);
  for (let i = 0; i < width; i += 2) {
    // 비교 선언문을 가장 먼저 처리한 뒤,
    // 다음으로 논리 연산자 AND, 마지막으로 논리 연산자 OR 순으로 처리.
    // 처리 순서를 명확히하고자 다음과 같이 작성:
    // "if(((i > 20) && (i < 50)) || ((i > 100) && (i < width-20))) {"
    if ((i > 20 && i < 50) || (i > 100 && i < width - 20)) {
      line(i, 151, i, height - 1);
    }
  }
}
