---
title: reference
slug: reference/
---

<div id="reference-page">

  {{> sidebar}}

  <div class="column-span">

    <main id="content" >
      <h1>Reference</h1>

      <div id="search" class="search-wrapper" role="search"></div>
      <div id="collection-list-nav"></div>

          <!--class="container-fluid"-->
      <div id="list" tabindex="2" class="list-wrapper allItems-collection"></div>
      <div id="item" tabindex="1" class="item-wrapper apidocs"></div>
      <div id="file" class="file-wrapper"></div>

    </main>

    {{> footer}}

  </div> <!-- end column-span -->

  <script src='{{#versionedAsset}}assets/js/p5.min.js{{/versionedAsset}}'></script>
  <script src='{{#versionedAsset}}assets/js/p5.sound.min.js{{/versionedAsset}}'></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/backbone.js/1.3.3/backbone-min.js"></script>
  <script src="/assets/js/vendor/require.min.js"></script>
  <script src="{{#versionedAsset}}assets/js/render.js{{/versionedAsset}}"></script>
  <script src="{{#versionedAsset}}assets/js/reference.js{{/versionedAsset}}"></script>

  <script>

    var translations;

    $(document).ready(function() {
      var routes = window.location.pathname.split('/');
      var lang = routes[1];
      if (langs.indexOf(lang) != -1) {

        var didReferenceRendered = false
        window.addEventListener('reference-rendered', function() {
          console.log("rendered");
          didReferenceRendered = true
          if (translations) {
            updateLanguage();
          }
        }, false);

        $.getJSON('/assets/reference/'+lang+'.json', function(data) {
          translations = data;
          if (didReferenceRendered) {
            updateLanguage();
          }
        });
      }
    });

    function updateLanguage() {
      if (translations) {
        // reference title
        $('h1').html(translations['h1']);
        $('#search input').attr('placeholder', translations['reference-search']);
        $('#search input').attr('title', translations['reference-search']);
        // reference description
        $('#reference-description1').html(translations['reference-description1']);
        $('#reference-description2').html(translations['reference-description2']);
        $('#reference-description3').html(translations['reference-description3']);
        $('#reference-description4').html(translations['reference-description4']);
        // reference contribute
        $('#reference-contribute1').html(translations['reference-contribute1']);
        $('#reference-contribute2').html(translations['reference-contribute2']);
        // reference error
        $('#reference-error1').html(translations['reference-error1']);
        $('#reference-error2').html(translations['reference-error2']);
        $('#reference-error3').html(translations['reference-error3']);
        $('#reference-error4').html(translations['reference-error4']);
        $('#reference-error5').html(translations['reference-error5']);
        // reference texts
        $('#reference-deprecated1').html(translations['reference-deprecated1']);
        $('#reference-deprecated2').html(translations['reference-deprecated2']);
        $('#reference-p5sound-requires').html(translations['reference-p5sound-requires']);
        $('#reference-example').html(translations['reference-example']);
        $('#reference-description').html(translations['reference-description'])
        $('#reference-extends').html(translations['reference-extends']);
        $('#reference-parameters').html(translations['reference-parameters']);
        $('#reference-syntax').html(translations['reference-syntax']);
        $('#reference-returns').html(translations['reference-returns']);
        $('.group-name, .subgroup-name').each(function() {
          $(this).text(translations[$(this).text()]);
        });
        var routes = window.location.hash.split('/');
        var obj = routes[1];
        var name = routes[2];

        // class page
        if (routes.length == 2) {
          var entry = translations[obj];
          for (var k in entry) {
            if (k == 'description') {
              $('.description-text').html('');
              entry.description.forEach(function (p) {
                $('.description-text').append('<p>' + p + '</p>');
              });
            }
            else if (k == 'params') {
              $('.params').find('ul').children('li').each(function () {
                var paramname = $(this).children('.paramname').text();
                $(this).children('.paramtype').text(entry.params[paramname]);
              });
            }
            else if (k == 'returns') {
              $('.returns').text(entry.returns);
            }
            // fields and methods sections
            else {
              // field
              $("[aria-labelledby='reference-fields']").children('li').each(function (i) {
                var fieldName = $(this).children('.paramname').children('a').text();
                let descr = '';
                var paragraphs = entry[fieldName].description;
                for (var i in paragraphs) {
                  descr += '<p>' + paragraphs[i] + '</p> ';
                }
                $(this).children('.paramtype').html(descr);
              });
              // method
              $("[aria-labelledby='reference-methods']").children('li').each(function (i) {
                var method = $(this).children('.paramname').children('a').text();
                // removes the brackets
                var methodName = method.substring(0, method.length - 2);
                let descr = '';
                var paragraphs = entry[methodName].description;
                for (var i in paragraphs) {
                  descr += '<p>' + paragraphs[i] + '</p> ';
                }
                $(this).children('.paramtype').html(descr);
              });
            }
          }
        }

        // method/field page
        if (routes.length == 3) {
          if (translations[obj] && translations[obj][name]) {
            var entry = translations[obj][name];

            $('.description-text').html('');
            entry.description.forEach(function (p) {
              $('.description-text').append('<p>' + p + '</p>');
            });
            $('.returns').html(entry.returns);
            $('.params').find('ul').children('li').each(function () {
              var paramname = $(this).children('.paramname').text();
              $(this).children('.paramtype').html(entry.params[paramname]);
            });
          }
        }
      }
    }
    </script>

  {{> asterisk}}

</div><!-- end id="reference-page"  -->